{"version":3,"sources":["components/Prolist.jsx","views/Home.jsx","views/Car.jsx","views/Kind.jsx","views/User.jsx","views/NoMatch.jsx","layout/App.js","views/Detail.jsx","views/Order.jsx","layout/DetailApp.jsx","serviceWorker.js","index.js"],"names":["props","console","log","prolist","className","map","item","index","key","onClick","history","push","id","src","images","small","alt","title","directors","itm","idx","name","casts","state","this","axios","get","then","res","setState","data","Prolist","Component","App","exact","path","component","Home","Kind","Car","User","from","to","render","pathArr","location","pathname","split","targetPath","length","includes","match","params","Order","Detail","Boolean","window","hostname","ReactDom","DetailApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99089e4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Pro.scss';\r\n//  列表的基本布局  子组件实现父组件传值子组件\r\nexport default (props) => {\r\n\tconsole.log(props)\r\n\tconst { prolist } = props;\r\n\treturn (\r\n\t\t<ul className = \"prolist\">\r\n\t\t\t{\r\n\t\t\t\tprolist.map((item,index) => (\r\n\t\t\t\t\t\r\n\t\t\t\t\t//  <Link to={'/detail/'+item.id} className=\"proitem\" key = { index } onClick = { () => {\r\n\t\t\t\t\t   \r\n\t\t\t\t\t// } }>\r\n\t\t\t\t\t//   <div className=\"itemimg\">\r\n\t\t\t\t\t//     <img src = { item.images.small } alt = { item.images.alt }/>\r\n\t\t\t\t\t//   </div>\r\n\t\t\t\t\t//   <div className=\"iteminfo\">\r\n\t\t\t\t\t//     <h3> { item.title } </h3>\r\n\t\t\t\t\t//     <div className=\"directors\">\r\n\t\t\t\t\t//       导演：\r\n\t\t\t\t\t//       {\r\n\t\t\t\t\t//         item.directors.map((itm, idx) => (\r\n\t\t\t\t\t//           <span key = { idx }> { itm.name } /</span>\r\n\t\t\t\t\t//         ))\r\n\t\t\t\t\t//       }\r\n\t\t\t\t\t//     </div>\r\n\t\t\t\t\t//     <div className=\"casts\">\r\n\t\t\t\t\t//       演员： \r\n\t\t\t\t\t//       {\r\n\t\t\t\t\t//         item.casts.map((itm, idx) => (\r\n\t\t\t\t\t//           <span key = { idx }> { itm.name } /</span>\r\n\t\t\t\t\t//         ))\r\n\t\t\t\t\t//       }\r\n\t\t\t\t\t//     </div>\r\n\t\t\t\t\t//   </div>\r\n\t\t\t\t\t// </Link>\t\r\n\r\n\t\t\t\t\t<li className=\"proitem\" key = { index } onClick = { () => {\r\n\t\t\t\t\t\tprops.history.push('/detail/'+item.id)\r\n\t\t\t\t\t} }>\r\n\t\t\t\t\t  <div className=\"itemimg\">\r\n\t\t\t\t\t    <img src = { item.images.small } alt = { item.images.alt }/>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div className=\"iteminfo\">\r\n\t\t\t\t\t    <h3> { item.title } </h3>\r\n\t\t\t\t\t    <div className=\"directors\">\r\n\t\t\t\t\t      导演：\r\n\t\t\t\t\t      {\r\n\t\t\t\t\t        item.directors.map((itm, idx) => (\r\n\t\t\t\t\t          <span key = { idx }> { itm.name } /</span>\r\n\t\t\t\t\t        ))\r\n\t\t\t\t\t      }\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div className=\"casts\">\r\n\t\t\t\t\t      演员： \r\n\t\t\t\t\t      {\r\n\t\t\t\t\t        item.casts.map((itm, idx) => (\r\n\t\t\t\t\t          <span key = { idx }> { itm.name } /</span>\r\n\t\t\t\t\t        ))\r\n\t\t\t\t\t      }\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</ul>\r\n\t\t\r\n\t)\r\n}","import React,{Component} from \"react\"\r\nimport Prolist from \"../components/Prolist\"\r\nimport axios from \"axios\"\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            prolist:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        axios.get(\"https://www.daxunxun.com/douban\").then(res=>{\r\n            this.setState({\r\n                prolist:res.data\r\n            })\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <header className=\"header\">\r\n                    头部\r\n            \r\n                </header>\r\n                <div className=\"content\">\r\n                    <Prolist prolist={this.state.prolist} {...this.props}></Prolist>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\"\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n         \r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <header className=\"header\">\r\n                    头部\r\n            \r\n                </header>\r\n                <div className=\"content\">\r\n                    购物车内容\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React,{Component} from \"react\"\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <header className=\"header\">\r\n                    头部\r\n            \r\n                </header>\r\n                <div className=\"content\">\r\n                    分类内容\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\"\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n         \r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <header className=\"header\">\r\n                    头部\r\n            \r\n                </header>\r\n                <div className=\"content\">\r\n                    个人中心内容\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\"\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n         \r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"box\">\r\n                <header className=\"header\">\r\n                    头部\r\n            \r\n                </header>\r\n                <div className=\"content\">\r\n                    404\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport {Switch,Route,NavLink,Redirect} from \"react-router-dom\" \r\nimport Home from \"../views/Home\";\r\nimport Car from \"../views/Car\";\r\nimport Kind from \"../views/Kind\";\r\nimport User from \"../views/User\";\r\nimport NoMatch from \"../views/NoMatch\";\r\n\r\n// 函数式组件\r\nconst App =()=>(\r\n    <div className=\"container\">\r\n        <Switch>\r\n            <Route exact path=\"/home\" component = {Home}></Route>\r\n            {/* <Route path=\"/home\" render={(props)=>{\r\n                // console.log(props)\r\n                return <Home></Home>\r\n            }}></Route> */}\r\n            <Route exact path=\"/kind\" component = {Kind}></Route>\r\n            <Route exact path=\"/car\" component = {Car}></Route>\r\n            <Route exact path=\"/user\" component = {User}></Route>\r\n            <Redirect exact from=\"/\" to=\"/home\"></Redirect>\r\n            <Route render={props => {\r\n                console.log(props);\r\n                const pathArr = props.location.pathname.split('/');\r\n                const targetPath = pathArr.length > 1 && pathArr[1];\r\n                if(['home', 'kind', 'car', 'user'].includes(targetPath)) {\r\n                    return <Redirect to={{pathname: '/' + targetPath}}></Redirect>;\r\n                } \r\n                return <NoMatch {...props}/>;\r\n            }} ></Route>\r\n        </Switch>\r\n        <footer className=\"footer\">\r\n               <ul>\r\n                    <NavLink to=\"/home\">\r\n                        <span className = \"iconfont icon-shouye\"></span>\r\n                        <p>首页</p>\r\n                    </NavLink>\r\n                    <NavLink to=\"/kind\">\r\n                        <span className = \"iconfont icon-fenlei\"></span>\r\n                        <p>分类</p>\r\n                    </NavLink>\r\n                    <NavLink to=\"/car\">\r\n                        <span className = \"iconfont icon-gaiicon-\"></span>\r\n                        <p>购物车</p>\r\n                    </NavLink>\r\n                    <NavLink to=\"/user\">\r\n                        <span className = \"iconfont icon-dianduidianliaotian\"></span>\r\n                        <p>个人中心</p>\r\n                    </NavLink>\r\n               </ul>\r\n        </footer>\r\n    </div>\r\n)\r\n// ------------------------------------------------------------------\r\n            // 类组件\r\n    // class App extends React.Component{\r\n    //     constructor(props){\r\n    //         super(props)\r\n    //         this.state={}\r\n    //     }\r\n    //     render(){\r\n    //         return(\r\n    //             <div className=\"container\">\r\n    //             <Switch>\r\n    //                 <Route path=\"/home\" component = {Home}></Route>\r\n    //                 <Route path=\"/kind\" component = {Kind}></Route>\r\n    //                 <Route path=\"/car\" component = {Car}></Route>\r\n    //                 <Route path=\"/user\" component = {User}></Route>\r\n    //             </Switch>\r\n    //             <footer className=\"footer\">\r\n    //                 底部\r\n    //             </footer>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n   \r\n    // }\r\n\r\nexport default App ","import React,{Component} from \"react\"\r\nimport axios from \"axios\"\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            title:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const{props:{match:{params:{id}}}} = this\r\n        console.log(id)\r\n        axios.get(\"https://www.daxunxun.com/detail?id=\"+id).then(res=>{\r\n            const data = res.data\r\n            this.setState({\r\n                title:data[0].title\r\n            })\r\n        })\r\n        //   用了.find方法就不用去拿id了\r\n        // axios.get(\"https://www.daxunxun.com/douban\").then(res=>{\r\n        //     const data = res.data.find(item=>item.id == id)\r\n        //     console.log(data)\r\n        //     this.setState({\r\n        //         title:data.title\r\n        //     })\r\n        // })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"box\">\r\n                    <header className=\"header\">详情头部</header>\r\n                    <div className=\"content\">\r\n                      \r\n                        {this.state.title}\r\n                    </div>\r\n                </div>\r\n                <footer className=\"footer\">底部</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\"\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            \r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"box\">\r\n                    <header className=\"header\">订单头部</header>\r\n                    <div className=\"content\">订单内容</div>\r\n                </div>\r\n                <footer className=\"footer\">底部</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport Detail from \"../views/Detail\"\r\nimport {Switch,Route} from \"react-router-dom\" \r\nimport Order from \"../views/Order\";\r\n\r\nconst App = ()=>(\r\n    <Switch>\r\n        <Route path=\"/detail/order\" component={Order}></Route>\r\n        <Route path=\"/detail/:id\" component={Detail}></Route>\r\n    </Switch>\r\n)\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport App from \"../src/layout/App\"\r\nimport DetailApp from \"./layout/DetailApp\"\r\nimport \"./main.scss\"\r\n// import {HashRouter} from \"react-router-dom\"\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\"\r\n\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\n// ReactDom.render(<App></App>,document.getElementById(\"root\"))\r\nReactDom.render(\r\n    <Router> \r\n        <Switch>\r\n            <Route path=\"/detail\" component={DetailApp}></Route>\r\n            <Route path=\"/\" component={App}></Route>\r\n        </Switch>\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n)\r\nserviceWorker.unregister() "],"sourceRoot":""}