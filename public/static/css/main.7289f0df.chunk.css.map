{"version":3,"sources":["Pro.scss","../lib/classes.scss","lib/reset.scss","lib/classes.scss","lib/base.scss","lib/variables.scss","main.scss"],"names":[],"mappings":"AACA,kBC+hBI,YAAS,CA2ZT,UDt7BkB,CCu7BlB,aDv7B0B,CCwW1B,iBAAkB,CD5WtB,wBCmXQ,mBAAoB,CACpB,iBAAkB,CAClB,WAAY,CACZ,KAAM,CACN,MAAO,CACP,eAAgB,CAChB,eAAgB,CAGhB,iBDvXqB,CCuXrB,oBDvXqB,CCejB,4BAiYyB,CA7XjC,oBA6XiC,CAxTjC,iLD7FJ,wBC+XY,UAAW,CACX,WAAY,CAsBnB,CAzTD,6VD7FJ,wBCsYY,UAAW,CACX,WAAY,CAnXZ,2BAoX4B,CAhXpC,mBAgXoC,CAcnC,CAzTD,0HD7FJ,wBC8YY,UAAW,CACX,WAAY,CA3XZ,+BA4XgC,CAxXxC,uBAwXwC,CAMvC,CDtZL,2BC07BI,YDn7BsB,CCo7BtB,aDp7B8B,CAPlC,+BC07BI,WDj7BwB,CCk7BxB,YDl7BgC,CCkmClC,YDjmC4B,CCkW1B,iBAAkB,CD5WtB,qCCmXQ,mBAAoB,CACpB,iBAAkB,CAClB,WAAY,CACZ,KAAM,CACN,MAAO,CACP,eAAgB,CAChB,eAAgB,CAGhB,qBDjXmB,CCSf,4BAiYyB,CA7XjC,oBA6XiC,CAxTjC,iLD7FJ,qCC+XY,UAAW,CACX,WAAY,CAsBnB,CAzTD,6VD7FJ,qCCsYY,UAAW,CACX,WAAY,CAnXZ,2BAoX4B,CAhXpC,mBAgXoC,CAcnC,CAzTD,0HD7FJ,qCC8YY,UAAW,CACX,WAAY,CA3XZ,+BA4XgC,CAxXxC,uBAwXwC,CAMvC,CDtZL,4BC0jBI,QAhBgB,CAmBZ,UAAW,CCljBnB,iBCaI,qBDV8B,CAC9B,yCAA6C,CCwK7C,UAMQ,eAAgB,CAChB,WAAY,CDxKxB,oBAEQ,YAAa,CAKrB,KACI,qBEF6B,CFG7B,UEK0B,CFEtB,eExByB,CDMrB,wBA8OyB,CA1OjC,qBA0OiC,CA1OjC,oBA0OiC,CA1OjC,gBA0OiC,CD9MrC,KACI,QAAS,CACT,eEhC2B,CFiC3B,eE7ByB,CF8BzB,uDEhCyE,CFoC7E,2GAuBI,QAAS,CACT,SAAU,CAKd,sDAUI,mBAAoB,CACpB,mBAAoB,CAIxB,yDAYI,iBAAkB,CAItB,mCAOI,iBAAkB,CAItB,MACI,wBAAyB,CACzB,gBAAiB,CACjB,kBAAmB,CACnB,eAAgB,CAIpB,WAGI,eAAgB,CAKpB,aAEI,QAAS,CACT,qBAAsB,CAI1B,oFAYI,aAAc,CAIlB,mBAGI,oBAAqB,CAIzB,oDAII,eAAgB,CAIpB,iBCmBQ,aAAc,CAEd,gCAAiC,CDdzC,SACI,eAAgB,CAIpB,+BAKI,cAAe,CAKnB,6BAII,aAAc,CAJlB,iEAMQ,SAAU,CAKlB,iDAEI,SAAU,CACV,QAAS,CAIb,sJC7MY,uBAmOuB,CA/N/B,eA+N+B,CDbnC,KACI,4BAAkC,CAItC,cAKI,oBAAqB,CAKzB,MAEI,0BAA2B,CAI/B,EACI,aE9M6B,CFqNjC,4BC1JY,aAAc,CACd,eAAgB,CAChB,UAAW,CACX,QAAS,CACT,eAAgB,CA5EpB,WACI,kBEgCU,CF/BV,oIAI4B,CAEhC,QACI,4BAAgD,CAChD,iBAAkB,CAClB,kCAAmC,CAGnC,iCAAkC,CAClC,qBAAsB,CGpDlC,2BH07BI,UGz7BgB,CH07BhB,WG17BsB,CAG1B,WH2hBI,YAAS,CAgIT,qBGzpB4B,CAFhC,gBHsjBI,QAhBgB,CAmBZ,UAAW,CA6Xf,UGj7BkB,CHk7BlB,WGl7BwB,CHshBxB,YAAS,CAgIT,qBGppB8B,CAPlC,wBHs7BI,UG76BoB,CH86BpB,aG96B6B,CHshC7B,qBGrhCgC,CAVpC,yBHsjBI,QAhBgB,CAmBZ,UAAW,CA6Xf,UGx6BoB,CHy6BpB,WGz6B0B,CH0LtB,aAAc,CAEd,gCAAiC,CG1MzC,mBHs7BI,UGn6BkB,CHo6BlB,YGp6B0B,CH4gC1B,wBG3gCiC,CApBrC,sBHs7BI,UGh6BoB,CHi6BpB,WGj6B0B,CHqgB1B,YAAS,CG3hBb,wBHmnCI,UG1lCuB,CH6hBvB,QAhBgB,CAmBZ,UAAW,CA6Xf,UG35BsB,CH45BtB,WG55B4B,CHggB5B,YAAS,CAgIT,qBG9nBkC,CH2tBlC,sBAtE2C,CAsM3C,kBA5CmC,CG50BvC,6BH8jCI,cG7hC6B,CAjCjC,0BH8jCI,cG1hC6B,CApCjC,+BHmnCI,UG3kCyB","file":"main.7289f0df.chunk.css","sourcesContent":["@charset \"UTF-8\";\n/**\r\n * 全局base定义\r\n * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方\r\n * 本文件中map使用\"_\"开头，extra中不使用\"_\"\r\n * base ⇌ extra\r\n */\n/**\r\n * 全局Variables\r\n * 基础变量map，如果不想定义某属性，将其value设置为null\r\n * 仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方\r\n * 本文件中map使用\"_\"开头，config中不使用\"_\"\r\n * variables ⇌ config\r\n */\n/**\r\n * 自定义全局函数\r\n * 扩充Sass默认函数库，用以增强语法\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的第一项\r\n * @function first\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的最后一项\r\n * @function last\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的倒数第几项\r\n * @function nth-last\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $index 指定需要返回的值在list中的倒数位置 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 移除SassList中的某个项目并返回新的List\r\n * @function remove\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {String} $value 指定需要被删除的值 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 截取SassList中的某个部分并返回新的List\r\n * @function slice\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $start 指定需要截取的开始下标 <2.1.0>\r\n * @param {Integer} $end 指定需要截取的结束下标（不包括end），当该值缺省时默认为末尾下标 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 从SassList中添加/删除项目，然后返回新的List。\r\n * @function splice\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $index 指定需要移除的开始下标 <2.1.0>\r\n * @param {Integer} $count 指定需要移除的数量，不可以为负值，0表示不移除 <2.1.0>\r\n * @param {String} $values 指定需要添加的新值（可以是多个），如果该值缺省，则表示只移除不添加新值 <2.1.0>\r\n */\n/**\r\n * 全局基础方法\r\n * 包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法\r\n */\n/**\r\n * @module 功能\r\n * @description 给需要的属性加厂家前缀\r\n * @method _prefix\r\n * @version 1.0.0\r\n * @param {String} $property 指定属性 <1.0.0>\r\n * @param {String} $value 指定属性值 <1.0.0>\r\n * @skip\r\n */\n/**\r\n * @module 功能\r\n * @description 定义字体图标\r\n * @method _yofont\r\n * @version 1.0.0\r\n * @skip\r\n */\n/**\r\n * @module 功能\r\n * @description 四则运算(iOS6.0+,Android4.4+)\r\n * @method calc\r\n * @version 1.7.0\r\n * @param {String} $property 指定需要进行计算的CSS属性 <1.7.0>\r\n * @param {String} $value 与原生CSS语法一致，区别在于需要使用引号包裹表达式 <1.7.0>\r\n * @example <div class=\"calc\">四则运算</div>\r\n * .calc { @include calc(width, \"100% - 100px\"); }\r\n */\n/**\r\n * @module 功能\r\n * @description 定义响应式方案\r\n * @method responsive\r\n * @version 1.0.0\r\n * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>\r\n */\n/**\r\n * @module 功能\r\n * @description 清除浮动方案\r\n * @method clearfix\r\n * @version 1.0.0\r\n * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>\r\n */\n/**\r\n * @module 功能\r\n * @description 清除行内级元素间间隙方案\r\n * @method killspace\r\n * @version 1.0.0\r\n * @param {Length} $font-size 指定子元素字号，默认值：.14rem <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <span class=\"item\">1</span>\r\n *      <span class=\"item\">2</span>\r\n *      <span class=\"item\">3</span>\r\n * </div>\r\n * .demo {@include killspace;}\r\n */\n/**\r\n * @module 功能\r\n * @description 元素在包含块中的对齐方式，默认为水平垂直对齐\r\n * @method align\r\n * @version 2.0.0\r\n * @param {String} $flexbox 指定包含块布局方式，可选值：flex | inline-flex，默认值：flex <2.0.0>\r\n * @param {String} $type 指定居中元素类型，可选值：image | text | other，默认值：text <2.0.0>\r\n * @param {Keywords} $justify-content 指定元素水平对齐方式，取值与`justify-content`属性一致，默认值：center <2.0.0>\r\n * @param {Keywords} $align-items 指定元素垂直对齐方式，取值与`align-items`属性一致，默认值：center <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <img class=\"item\" alt=\"未知尺寸图片居中\" />\r\n * </div>\r\n * .demo {@include align;}\r\n */\n/**\r\n * @module 功能\r\n * @description 定义文档根节点是否允许滚动\r\n * @method root-scroll\r\n * @version 1.4.0\r\n * @param {Boolean} $is-scroll 指定是否有滚动，默认值：false <1.8.6>\r\n */\n/**\r\n * @module 功能\r\n * @description 定义是否有滚动条\r\n * @method overflow\r\n * @version 1.0.0\r\n * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>\r\n */\n/**\r\n * @module 功能\r\n * @description 生成全屏方法\r\n * @method fullscreen\r\n * @version 1.7.0\r\n * @param {Integer} $z-index 指定层叠级别 <1.7.0>\r\n * @param {Keywords} $position 指定定位方式，取除`static | relative`之外的值，默认值：absolute <1.8.5>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义使用何种滤镜\r\n * @method filter\r\n * @version 1.7.0\r\n * @param {String} $filter 取值与`filter`属性一致 <1.7.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义UA默认外观\r\n * @method appearance\r\n * @version 1.0.0\r\n * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义如何选中内容\r\n * @method user-select\r\n * @version 1.0.0\r\n * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义盒模型\r\n * @method box-sizing\r\n * @version 1.0.0\r\n * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义渐变色值\r\n * @method gradient\r\n * @version 1.0.0\r\n * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial <1.0.0>\r\n * @param {String} $dir 指定渐变方向，可选值：[left | right] || [top | bottom] | angle <2.0.0>\r\n * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景图像缩放（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-size\r\n * @version 1.4.0\r\n * @param {Keywords | Length} $background-size 指定背景图缩放值，取值与`background-size`属性一致 <1.4.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景裁减（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-clip\r\n * @version 1.6.0\r\n * @param {Keywords} $background-clip 指定背景图缩放值，取值与`background-clip`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景显示区域（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-origin\r\n * @version 1.6.0\r\n * @param {Keywords} $background-origin 指定背景图`background-position`属性计算相对的参考点，取值与`background-origin`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义圆角，用于修复某些安卓机型上“圆角+边框+背景”，背景溢出的情况\r\n * @method border-radius\r\n * @version 1.6.0\r\n * @param {Length} $border-radius 指定元素的圆角半径，取值与`border-radius`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 为元素添加边框（包括1px边框）\r\n * @method border\r\n * @version 2.0.0\r\n * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>\r\n * @param {String} $border-color 指定边框颜色 <2.0.0>\r\n * @param {String} $border-style 指定边框样式 <2.0.0>\r\n * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 定义简单变换\r\n * @method transform\r\n * @version 1.0.0\r\n * @param {String} $transform 取值范围与`transform`属性一致 <1.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 定义变换原点\r\n * @method transform-origin\r\n * @version 1.0.0\r\n * @param {Length | Percentage | Keywords} $transform-origin 取值范围与`transform-origin`属性一致 <1.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定某元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化\r\n * @method transform-style\r\n * @version 2.0.0\r\n * @param {String} $transform-style 取值范围与`transform-style`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果。「z>0」的三维元素比正常大，而「z<0」时则比正常小，大小程度由该属性的值决定。\r\n * @method perspective\r\n * @version 2.0.0\r\n * @param {none | Length} $perspective 取值范围与`perspective`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定透视点的位置\r\n * @method perspective-origin\r\n * @version 2.0.0\r\n * @param {Length | Percentage | Keywords} $perspective-origin 取值范围与`perspective-origin`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定元素背面面向用户时是否可见\r\n * @method backface-visibility\r\n * @version 2.0.0\r\n * @param {Keywords} $backface-visibility 取值范围与`backface-visibility`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Animation\r\n * @description 定义动画\r\n * @method animation\r\n * @version 1.0.0\r\n * @param {String} $animation 取值与原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module Transition\r\n * @description 定义补间\r\n * @method transition\r\n * @version 1.0.0\r\n * @param {String} $transition 取值与原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义显示类型为伸缩盒\r\n * @method flexbox\r\n * @version 1.0.0\r\n * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素如何分配空间\r\n * @method flex\r\n * @version 1.0.0\r\n * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>\r\n * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的排版顺序\r\n * @method order\r\n * @version 1.0.0\r\n * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(iOS7.0+,Android4.4+)\r\n * @method flex-flow\r\n * @version 2.0.0\r\n * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的流动方向\r\n * @method flex-direction\r\n * @version 1.0.0\r\n * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素溢出后排版(iOS7.0+,Android4.4+)\r\n * @method flex-wrap\r\n * @version 1.0.0\r\n * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)\r\n * @method justify-content\r\n * @version 1.0.0\r\n * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义多行弹性容器侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-content\r\n * @version 1.8.5\r\n * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义单行弹性容器侧轴对齐方式\r\n * @method align-items\r\n * @version 1.0.0\r\n * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器中子元素自身的在侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-self\r\n * @version 1.0.0\r\n * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成矩形方法\r\n * @method rect\r\n * @version 1.0.0\r\n * @param {Length} $width 定义矩形的长度 <1.0.0>\r\n * @param {Length} $height 定义矩形的高度 <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成正方形方法\r\n * @method square\r\n * @version 1.0.0\r\n * @param {Length} $size 定义正方形的边长 <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成圆形方法\r\n * @method circle\r\n * @version 1.0.0\r\n * @param {Length} $size 定义圆的半径长度 <1.0.0>\r\n * @param {Length} $radius 定义圆的圆角半径长度 <1.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 链接处理方法\r\n * @method link\r\n * @version 1.0.0\r\n * @param {Color} $color 定义链接颜色 <1.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 文本碰到边界是否换行\r\n * @method wrap\r\n * @version 1.0.0\r\n * @param {Boolean} $is-wrap 定义文本是否换行，默认值：true <2.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 单行文本溢出时显示省略号\r\n * @method ellipsis\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n * @param {Integer} $line-clamp 定义需要显示的行数，默认值：1（即使用单行溢出的处理方案），需要注意的是本参数只支持webkit内核 <2.1.2>\r\n */\n/**\r\n * @module 文本\r\n * @description 文字隐藏方案\r\n * @method texthide\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n */\n/**\r\n * @module 背景颜色\r\n * @description 填充背景颜色方案\r\n * @method background-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义背景的颜色，默认值：#eee <2.0.0>\r\n */\n/**\r\n * @module 文本颜色\r\n * @description 文本颜色方案\r\n * @method text-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本的颜色，默认值：#333 <2.0.0>\r\n */\n/**\r\n * @module 文本行高\r\n * @description 文本行高方案\r\n * @method line-height\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本行高，默认值：1 <2.0.0>\r\n */\n/**\r\n * @module 字体大小\r\n * @description 字体大小方案\r\n * @method font-size\r\n * @version 1.0.0\r\n * @param {Length} $size 字体大小，默认值：0.12rem <2.0.0>\r\n */\n/**\r\n * @module 文本对齐方式\r\n * @description 文本对齐方式\r\n * @method fontsize\r\n * @version 1.0.0\r\n * @param {Length} $val 文本对齐方式，默认值：居中\r\n */\n/**\r\n * @module 内边距\r\n * @description 内边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\n/**\r\n * @module 字体样式\r\n * @description 字体样式\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val bold\r\n */\n/**\r\n * @module 外边距\r\n * @description 外边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\n/**\r\n * 全局Reset\r\n * 重置Mobile及高级浏览器上常见的差异\r\n */\n*,\n::before,\n::after {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\n\nhtml,\nbody {\n  overflow: hidden;\n  height: 100%; }\n\n::-webkit-scrollbar {\n  display: none; }\n\nhtml {\n  background-color: #ffffff;\n  color: #333;\n  font-size: 100px;\n  -webkit-user-select: none;\n  user-select: none; }\n\nbody {\n  margin: 0;\n  font-size: 0.14em;\n  line-height: 1.5;\n  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }\n\nul,\nol,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nfigure,\nform,\nfieldset,\nlegend,\ninput,\ntextarea,\nbutton,\np,\nblockquote,\nth,\ntd,\npre,\nxmp {\n  margin: 0;\n  padding: 0; }\n\ninput,\ntextarea,\nbutton,\nselect,\npre,\nxmp,\ntt,\ncode,\nkbd,\nsamp {\n  line-height: inherit;\n  font-family: inherit; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nsmall,\nbig,\ninput,\ntextarea,\nbutton,\nselect {\n  font-size: inherit; }\n\naddress,\ncite,\ndfn,\nem,\ni,\noptgroup,\nvar {\n  font-style: normal; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n  text-align: left; }\n\nul,\nol,\nmenu {\n  list-style: none; }\n\nfieldset,\nimg {\n  border: 0;\n  vertical-align: middle; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\naudio,\ncanvas,\nvideo {\n  display: inline-block; }\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: \"\\0020\"; }\n\ntextarea,\npre,\nxmp {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch; }\n\ntextarea {\n  resize: vertical; }\n\ninput,\ntextarea,\nbutton,\nselect\na {\n  outline: 0 none; }\n\ninput,\ntextarea,\nbutton,\nselect {\n  color: inherit; }\n  input:disabled,\n  textarea:disabled,\n  button:disabled,\n  select:disabled {\n    opacity: 1; }\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0; }\n\ninput[type=\"button\"],\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"file\"]::-webkit-file-upload-button,\ninput[type=\"search\"]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n  appearance: none; }\n\nmark {\n  background-color: rgba(0, 0, 0, 0); }\n\na,\nins,\ns,\nu,\ndel {\n  text-decoration: none; }\n\na,\nimg {\n  -webkit-touch-callout: none; }\n\na {\n  color: #00afc7; }\n\n.g-clear::after,\n.g-mod::after {\n  display: block;\n  overflow: hidden;\n  clear: both;\n  height: 0;\n  content: \"\\0020\"; }\n\n@font-face {\n  font-family: yofont;\n  src: url(//ss.qunarzz.com/yo/font/1.0.3/yofont.woff) format(\"woff\"), url(//ss.qunarzz.com/yo/font/1.0.3/yofont.ttf) format(\"truetype\"); }\n\n.yo-ico {\n  font-family: yofont !important;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  vertical-align: middle; }\n\n.prolist .proitem {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  width: 100%;\n  height: 1.1rem;\n  position: relative; }\n  .prolist .proitem::after {\n    pointer-events: none;\n    position: absolute;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n    content: \"\\0020\";\n    border-color: #000;\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0; }\n    @media (max--moz-device-pixel-ratio: 1.49), (-webkit-max-device-pixel-ratio: 1.49), (max-device-pixel-ratio: 1.49), (max-resolution: 143dpi), (max-resolution: 1.49dppx) {\n      .prolist .proitem::after {\n        width: 100%;\n        height: 100%; } }\n    @media (min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49), (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49), (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49), (min-resolution: 144dpi) and (max-resolution: 239dpi), (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx) {\n      .prolist .proitem::after {\n        width: 200%;\n        height: 200%;\n        -webkit-transform: scale(0.5);\n        transform: scale(0.5); } }\n    @media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {\n      .prolist .proitem::after {\n        width: 300%;\n        height: 300%;\n        -webkit-transform: scale(0.33333);\n        transform: scale(0.33333); } }\n  .prolist .proitem .itemimg {\n    width: 1.1rem;\n    height: 1.1rem; }\n    .prolist .proitem .itemimg img {\n      width: 0.9rem;\n      height: 0.9rem;\n      margin: 0.1rem;\n      position: relative; }\n      .prolist .proitem .itemimg img::after {\n        pointer-events: none;\n        position: absolute;\n        z-index: 999;\n        top: 0;\n        left: 0;\n        overflow: hidden;\n        content: \"\\0020\";\n        border-color: #000;\n        border-style: solid;\n        border-width: 1px;\n        -webkit-transform-origin: 0 0;\n        transform-origin: 0 0; }\n        @media (max--moz-device-pixel-ratio: 1.49), (-webkit-max-device-pixel-ratio: 1.49), (max-device-pixel-ratio: 1.49), (max-resolution: 143dpi), (max-resolution: 1.49dppx) {\n          .prolist .proitem .itemimg img::after {\n            width: 100%;\n            height: 100%; } }\n        @media (min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49), (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49), (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49), (min-resolution: 144dpi) and (max-resolution: 239dpi), (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx) {\n          .prolist .proitem .itemimg img::after {\n            width: 200%;\n            height: 200%;\n            -webkit-transform: scale(0.5);\n            transform: scale(0.5); } }\n        @media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {\n          .prolist .proitem .itemimg img::after {\n            width: 300%;\n            height: 300%;\n            -webkit-transform: scale(0.33333);\n            transform: scale(0.33333); } }\n  .prolist .proitem .iteminfo {\n    -webkit-box-flex: 1;\n    -webkit-flex: 1;\n    flex: 1;\n    width: .1px; }\n","@charset \"utf-8\";\r\n/**\r\n * 全局基础方法\r\n * 包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法\r\n */\r\n\r\n/**\r\n * @module 功能\r\n * @description 给需要的属性加厂家前缀\r\n * @method _prefix\r\n * @version 1.0.0\r\n * @param {String} $property 指定属性 <1.0.0>\r\n * @param {String} $value 指定属性值 <1.0.0>\r\n * @skip\r\n */\r\n@mixin prefix($property, $value) {\r\n    // 老式浏览器\r\n    // 是否开启厂商前缀支持\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        // 遍历输出厂商代码\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            #{$vendor}#{$property}: $value;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    #{$property}: $value;\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义字体图标\r\n * @method _yofont\r\n * @version 1.0.0\r\n * @skip\r\n */\r\n@mixin yofont() {\r\n    // 是否开启图标字体\r\n    @if map-get($ico, is-use) {\r\n        @font-face {\r\n            font-family: map-get($ico, font-name);\r\n            src:\r\n                // 现代浏览器\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.woff) format(\"woff\"),\r\n                // Android2.2+\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.ttf) format(\"truetype\");\r\n        }\r\n        .yo-ico {\r\n            font-family: map-get($ico, font-name) !important;\r\n            font-style: normal;\r\n            -webkit-font-smoothing: antialiased;\r\n            // PC端chrome有锯齿问题，Mobile不需要\r\n            // -webkit-text-stroke-width: .1px;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 四则运算(iOS6.0+,Android4.4+)\r\n * @method calc\r\n * @version 1.7.0\r\n * @param {String} $property 指定需要进行计算的CSS属性 <1.7.0>\r\n * @param {String} $value 与原生CSS语法一致，区别在于需要使用引号包裹表达式 <1.7.0>\r\n * @example <div class=\"calc\">四则运算</div>\r\n * .calc { @include calc(width, \"100% - 100px\"); }\r\n */\r\n@mixin calc($property, $value) {\r\n    // 是否开启厂商前缀支持\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        // 遍历输出厂商代码\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            // 输出所有厂商前缀（IE9.0+支持标准写法，更早版本不支持该函数）\r\n            @if $vendor != -ms- {\r\n                #{$property}: #{$vendor}calc(#{$value});\r\n            }\r\n        }\r\n    }\r\n    #{$property}: calc(#{$value});\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义响应式方案\r\n * @method responsive\r\n * @version 1.0.0\r\n * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>\r\n */\r\n@mixin responsive($media) {\r\n    @if not map-has-key($media-types, $media) {\r\n        @warn \"#{$media} is not a known media type. Using portrait instead.\";\r\n        $media: portrait;\r\n    }\r\n    @media #{map-get($media-types, $media)} {\r\n        @content;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 清除浮动方案\r\n * @method clearfix\r\n * @version 1.0.0\r\n * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>\r\n */\r\n@mixin clearfix($type: pseudo-element) {\r\n    @if $type == pseudo-element {\r\n        // 创建伪元素用以清除自身浮动\r\n        &::after{\r\n            display: block;\r\n            overflow: hidden;\r\n            clear: both;\r\n            height: 0;\r\n            content: \"\\0020\";\r\n        }\r\n    } @else {\r\n        // 创建BFC用以清除自身浮动\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 清除行内级元素间间隙方案\r\n * @method killspace\r\n * @version 1.0.0\r\n * @param {Length} $font-size 指定子元素字号，默认值：.14rem <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <span class=\"item\">1</span>\r\n *      <span class=\"item\">2</span>\r\n *      <span class=\"item\">3</span>\r\n * </div>\r\n * .demo {@include killspace;}\r\n */\r\n@mixin killspace($font-size: .14rem) {\r\n    font-size: 0;\r\n    font-family: arial;\r\n    > .item {\r\n        display: inline-block;\r\n        font-size: $font-size;\r\n        font-family: map-get($base, font-family);\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 元素在包含块中的对齐方式，默认为水平垂直对齐\r\n * @method align\r\n * @version 2.0.0\r\n * @param {String} $flexbox 指定包含块布局方式，可选值：flex | inline-flex，默认值：flex <2.0.0>\r\n * @param {String} $type 指定居中元素类型，可选值：image | text | other，默认值：text <2.0.0>\r\n * @param {Keywords} $justify-content 指定元素水平对齐方式，取值与`justify-content`属性一致，默认值：center <2.0.0>\r\n * @param {Keywords} $align-items 指定元素垂直对齐方式，取值与`align-items`属性一致，默认值：center <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <img class=\"item\" alt=\"未知尺寸图片居中\" />\r\n * </div>\r\n * .demo {@include align;}\r\n */\r\n@mixin align($flexbox: flex, $type: text, $justify-content: center, $align-items: center) {\r\n    @include flexbox($flexbox);\r\n    @include justify-content($justify-content);\r\n    @include align-items($align-items);\r\n    @if $type == text {\r\n        @include wrap;\r\n    }\r\n    > .item {\r\n        @if $type == image {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义文档根节点是否允许滚动\r\n * @method root-scroll\r\n * @version 1.4.0\r\n * @param {Boolean} $is-scroll 指定是否有滚动，默认值：false <1.8.6>\r\n */\r\n@mixin root-scroll($is-scroll: false) {\r\n    html,\r\n    body {\r\n        @if $is-scroll {\r\n            overflow: visible;\r\n            height: auto;\r\n        } @else {\r\n            overflow: hidden;\r\n            height: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义是否有滚动条\r\n * @method overflow\r\n * @version 1.0.0\r\n * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>\r\n */\r\n@mixin overflow($overflow: auto) {\r\n    @if $overflow == auto {\r\n        overflow: auto;\r\n        // 移除此条规则，防止iOS8.0+ webview崩溃\r\n        -webkit-overflow-scrolling: touch;\r\n    } @else {\r\n        overflow: $overflow;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 生成全屏方法\r\n * @method fullscreen\r\n * @version 1.7.0\r\n * @param {Integer} $z-index 指定层叠级别 <1.7.0>\r\n * @param {Keywords} $position 指定定位方式，取除`static | relative`之外的值，默认值：absolute <1.8.5>\r\n */\r\n@mixin fullscreen($z-index: null, $position: absolute) {\r\n    position: $position;\r\n    z-index: $z-index;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义使用何种滤镜\r\n * @method filter\r\n * @version 1.7.0\r\n * @param {String} $filter 取值与`filter`属性一致 <1.7.0>\r\n */\r\n@mixin filter($filter...) {\r\n    @include prefix(filter, $filter);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义UA默认外观\r\n * @method appearance\r\n * @version 1.0.0\r\n * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin appearance($appearance: none) {\r\n    @include prefix(appearance, $appearance);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义如何选中内容\r\n * @method user-select\r\n * @version 1.0.0\r\n * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin user-select($user-select: none) {\r\n    @include prefix(user-select, $user-select);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义盒模型\r\n * @method box-sizing\r\n * @version 1.0.0\r\n * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>\r\n */\r\n@mixin box-sizing($box-sizing: border-box) {\r\n    @include prefix(box-sizing, $box-sizing);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义渐变色值\r\n * @method gradient\r\n * @version 1.0.0\r\n * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial <1.0.0>\r\n * @param {String} $dir 指定渐变方向，可选值：[left | right] || [top | bottom] | angle <2.0.0>\r\n * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致 <1.0.0>\r\n */\r\n@mixin gradient($type, $dir, $color-stop...) {\r\n    // 最新草案：当方向为top,right,bottom,left时需要使用关键字to\r\n    $dir-new: to;\r\n    $dir-x: right left;\r\n    $dir-y: top bottom;\r\n\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            background-image: $vendor$type#{-gradient($dir, $color-stop)};\r\n        }\r\n    }\r\n    @each $direction in $dir {\r\n        @if index($dir-x, $direction) != null {\r\n            $dir-new: append($dir-new, remove($dir-x, $direction), space);\r\n        } @else if index($dir-y, $direction) != null {\r\n            $dir-new: append($dir-new, remove($dir-y, $direction), space);\r\n        } @else {\r\n            $dir-new: $direction;\r\n        }\r\n    }\r\n\r\n    background-image: $type#{-gradient($dir-new, $color-stop)};\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景图像缩放（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-size\r\n * @version 1.4.0\r\n * @param {Keywords | Length} $background-size 指定背景图缩放值，取值与`background-size`属性一致 <1.4.0>\r\n */\r\n@mixin background-size($background-size...) {\r\n    @include prefix(background-size, $background-size);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景裁减（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-clip\r\n * @version 1.6.0\r\n * @param {Keywords} $background-clip 指定背景图缩放值，取值与`background-clip`属性一致 <1.6.0>\r\n */\r\n@mixin background-clip($background-clip...) {\r\n    @include prefix(background-clip, $background-clip);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景显示区域（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-origin\r\n * @version 1.6.0\r\n * @param {Keywords} $background-origin 指定背景图`background-position`属性计算相对的参考点，取值与`background-origin`属性一致 <1.6.0>\r\n */\r\n@mixin background-origin($background-origin...) {\r\n    @include prefix(background-origin, $background-origin);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义圆角，用于修复某些安卓机型上“圆角+边框+背景”，背景溢出的情况\r\n * @method border-radius\r\n * @version 1.6.0\r\n * @param {Length} $border-radius 指定元素的圆角半径，取值与`border-radius`属性一致 <1.6.0>\r\n */\r\n@mixin border-radius($border-radius...) {\r\n    border-radius: $border-radius;\r\n    // 之所以会这样是因为这些机型的背景是从边框处开始渲染，所以只需要改成从padding处渲染即可\r\n    @include background-clip(padding-box !important);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 为元素添加边框（包括1px边框）\r\n * @method border\r\n * @version 2.0.0\r\n * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>\r\n * @param {String} $border-color 指定边框颜色 <2.0.0>\r\n * @param {String} $border-style 指定边框样式 <2.0.0>\r\n * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>\r\n */\r\n@mixin border($border-width: 1px, $border-color: map-get($base, border-color), $border-style: solid, $radius: null) {\r\n    // 为边框位置提供定位参考\r\n    position: relative;\r\n    @if $border-width == null {\r\n        $border-width: 0;\r\n    }\r\n    border-radius: $radius;\r\n    &::after {\r\n        // 用以解决边框layer遮盖内容\r\n        pointer-events: none;\r\n        position: absolute;\r\n        z-index: 999;\r\n        top: 0;\r\n        left: 0;\r\n        overflow: hidden;\r\n        content: \"\\0020\";\r\n        border-color: $border-color;\r\n        border-style: $border-style;\r\n        border-width: $border-width;\r\n        // 适配dpr进行缩放\r\n        @include responsive(retina1x) {\r\n            width: 100%;\r\n            height: 100%;\r\n            @if $radius != null {\r\n                border-radius: $radius;\r\n            }\r\n        }\r\n        @include responsive(retina2x) {\r\n            width: 200%;\r\n            height: 200%;\r\n            @include transform(scale(.5));\r\n            @if $radius != null {\r\n                border-radius: $radius * 2;\r\n            }\r\n        }\r\n        @include responsive(retina3x) {\r\n            width: 300%;\r\n            height: 300%;\r\n            @include transform(scale(.33333));\r\n            @if $radius != null {\r\n                border-radius: $radius * 3;\r\n            }\r\n        }\r\n        @include transform-origin(0 0);\r\n    }\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 定义简单变换\r\n * @method transform\r\n * @version 1.0.0\r\n * @param {String} $transform 取值范围与`transform`属性一致 <1.0.0>\r\n */\r\n@mixin transform($transform...) {\r\n    @include prefix(transform, $transform);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 定义变换原点\r\n * @method transform-origin\r\n * @version 1.0.0\r\n * @param {Length | Percentage | Keywords} $transform-origin 取值范围与`transform-origin`属性一致 <1.0.0>\r\n */\r\n@mixin transform-origin($transform-origin) {\r\n    @include prefix(transform-origin, $transform-origin);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定某元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化\r\n * @method transform-style\r\n * @version 2.0.0\r\n * @param {String} $transform-style 取值范围与`transform-style`属性一致 <2.0.0>\r\n */\r\n@mixin transform-style($transform-style) {\r\n    @include prefix(transform-style, $transform-style);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果。「z>0」的三维元素比正常大，而「z<0」时则比正常小，大小程度由该属性的值决定。\r\n * @method perspective\r\n * @version 2.0.0\r\n * @param {none | Length} $perspective 取值范围与`perspective`属性一致 <2.0.0>\r\n */\r\n@mixin perspective($perspective) {\r\n    @include prefix(perspective, $perspective);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定透视点的位置\r\n * @method perspective-origin\r\n * @version 2.0.0\r\n * @param {Length | Percentage | Keywords} $perspective-origin 取值范围与`perspective-origin`属性一致 <2.0.0>\r\n */\r\n@mixin perspective-origin($perspective-origin) {\r\n    @include prefix(perspective-origin, $perspective-origin);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定元素背面面向用户时是否可见\r\n * @method backface-visibility\r\n * @version 2.0.0\r\n * @param {Keywords} $backface-visibility 取值范围与`backface-visibility`属性一致 <2.0.0>\r\n */\r\n@mixin backface-visibility($backface-visibility) {\r\n    @include prefix(backface-visibility, $backface-visibility);\r\n}\r\n\r\n/**\r\n * @module Animation\r\n * @description 定义动画\r\n * @method animation\r\n * @version 1.0.0\r\n * @param {String} $animation 取值与原生语法一致 <1.0.0>\r\n */\r\n@mixin animation($animation...) {\r\n    @include prefix(animation, $animation);\r\n}\r\n\r\n/**\r\n * @module Transition\r\n * @description 定义补间\r\n * @method transition\r\n * @version 1.0.0\r\n * @param {String} $transition 取值与原生语法一致 <1.0.0>\r\n */\r\n@mixin transition($transition...){\r\n    $prefix-properties: transform, transform-origin;\r\n    $vendor-list: ();\r\n\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @for $i from 1 through length($transition) {\r\n                @if index($prefix-properties, nth(nth($transition, $i), 1)) {\r\n                    $vendor-list: join($vendor-list, #{$vendor}#{nth($transition, $i)}, comma);\r\n                } @else {\r\n                    $vendor-list: join($vendor-list, #{nth($transition, $i)}, comma);\r\n                }\r\n            }\r\n            #{$vendor}transition: $vendor-list;\r\n        }\r\n    }\r\n\r\n    transition: $transition;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义显示类型为伸缩盒\r\n * @method flexbox\r\n * @version 1.0.0\r\n * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>\r\n */\r\n@mixin flexbox($flexbox: flex) {\r\n    @if $flexbox == inline-flex or $flexbox == inline {\r\n        $flexbox: \"inline-\";\r\n    } @else {\r\n        $flexbox: \"\";\r\n    }\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始草案：20090723\r\n    // 过渡草案：20110322-20120322（以后面这个日期为准）\r\n    // 最新草案：20120612-20140925（以后面这个日期为准）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}box;\r\n                display: #{$vendor}#{$flexbox}flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}flexbox;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    display: #{$flexbox}flex;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素如何分配空间\r\n * @method flex\r\n * @version 1.0.0\r\n * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>\r\n * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>\r\n */\r\n@mixin flex($flex: 1, $direction: row) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始版本box-flex并不是复合属性，所以只有一个为数字的值\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-flex: $flex;\r\n                #{$vendor}flex: $flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex: $flex;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex: $flex;\r\n    // 修复Android Browser4.3及以下，iOS Safari6.1及以下按比例分配错误的问题（同时还包括flex嵌套时分配错误）\r\n    @if $direction == row {\r\n        width: .1px;\r\n    } @else {\r\n        height: .1px;\r\n    }\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的排版顺序\r\n * @method order\r\n * @version 1.0.0\r\n * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>\r\n */\r\n@mixin order($order: 1) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-ordinal-group: $order;\r\n                #{$vendor}order: $order;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex-order: $order;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    order: $order;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(iOS7.0+,Android4.4+)\r\n * @method flex-flow\r\n * @version 2.0.0\r\n * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>\r\n */\r\n@mixin flex-flow($flex-flow: row nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    @include prefix(flex-flow, $flex-flow);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的流动方向\r\n * @method flex-direction\r\n * @version 1.0.0\r\n * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>\r\n */\r\n@mixin flex-direction($flex-direction: row) {\r\n    // 老式浏览器（实验性质支持原始草案）\r\n    // 当厂商前缀不为`-ms-`时输出原始草案厂商前缀版\r\n    @if $flex-direction == row {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == row-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 老式浏览器（实验性质支持过渡及最新草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            // `flex-direction`属性在过渡和最新草案中语法一致\r\n            #{$vendor}flex-direction: $flex-direction;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex-direction: $flex-direction;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素溢出后排版(iOS7.0+,Android4.4+)\r\n * @method flex-wrap\r\n * @version 1.0.0\r\n * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>\r\n */\r\n@mixin flex-wrap($flex-wrap: nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    // 原始草案有`box-lines`对应本属性，不过虽然被webkit实验性质支援，但却未被任何浏览器实现（等同于未实现）\r\n    @include prefix(flex-wrap, $flex-wrap);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)\r\n * @method justify-content\r\n * @version 1.0.0\r\n * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin justify-content($justify-content: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $justify-content == center {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: $justify-content;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: $justify-content;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: start;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: end;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: justify;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    // 原始草案不支持`space-around`(过渡版本中的`distribute`) 值\r\n                    //#{$vendor}box-pack: distribute;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    justify-content: $justify-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义多行弹性容器侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-content\r\n * @version 1.8.5\r\n * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>\r\n */\r\n@mixin align-content($align-content: center) {\r\n    // 老式浏览器（实验性质支持2个阶段草案）\r\n    @if $align-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == center or $align-content == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: $align-content;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-content: $align-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义单行弹性容器侧轴对齐方式\r\n * @method align-items\r\n * @version 1.0.0\r\n * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-items($align-items: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-items == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: start;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-items == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: end;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else {\r\n        // 取值为center | baseline | stretch时，3个阶段草案均相同\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: $align-items;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: $align-items;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-items: $align-items;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器中子元素自身的在侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-self\r\n * @version 1.0.0\r\n * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-self($align-self: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-self == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == auto or $align-self == center or $align-self == baseline or $align-self == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: $align-self;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-self: $align-self;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成矩形方法\r\n * @method rect\r\n * @version 1.0.0\r\n * @param {Length} $width 定义矩形的长度 <1.0.0>\r\n * @param {Length} $height 定义矩形的高度 <1.0.0>\r\n */\r\n@mixin rect($width, $height) {\r\n    width: $width;\r\n    height: $height;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成正方形方法\r\n * @method square\r\n * @version 1.0.0\r\n * @param {Length} $size 定义正方形的边长 <1.0.0>\r\n */\r\n@mixin square($size) {\r\n    width: $size;\r\n    height: $size;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成圆形方法\r\n * @method circle\r\n * @version 1.0.0\r\n * @param {Length} $size 定义圆的半径长度 <1.0.0>\r\n * @param {Length} $radius 定义圆的圆角半径长度 <1.0.0>\r\n */\r\n@mixin circle($size, $radius: 50%) {\r\n    @include square($size);\r\n    @include border-radius($radius);\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 链接处理方法\r\n * @method link\r\n * @version 1.0.0\r\n * @param {Color} $color 定义链接颜色 <1.0.0>\r\n */\r\n@mixin link($color: map-get($base, link-color)) {\r\n    color: $color;\r\n    cursor: pointer;\r\n    &:active {\r\n        opacity: .5;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 文本碰到边界是否换行\r\n * @method wrap\r\n * @version 1.0.0\r\n * @param {Boolean} $is-wrap 定义文本是否换行，默认值：true <2.0.0>\r\n */\r\n@mixin wrap($is-wrap: true) {\r\n    @if $is-wrap == true {\r\n        word-wrap: break-word;\r\n        word-break: break-all;\r\n    } @else {\r\n        white-space: nowrap;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 单行文本溢出时显示省略号\r\n * @method ellipsis\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n * @param {Integer} $line-clamp 定义需要显示的行数，默认值：1（即使用单行溢出的处理方案），需要注意的是本参数只支持webkit内核 <2.1.2>\r\n */\r\n@mixin ellipsis($width: null, $line-clamp: 1) {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: $width;\r\n    @if abs($line-clamp) > 1 {\r\n        // 要使得多行截取生效，display的值只能为-webkit-box\r\n        display: -webkit-box !important;\r\n        -webkit-line-clamp: $line-clamp;\r\n        @include flex-direction(column);\r\n    } @else {\r\n        @include wrap(false);\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 文字隐藏方案\r\n * @method texthide\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n */\r\n@mixin texthide($width: null) {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-indent: 100%;\r\n    width: $width;\r\n}\r\n\r\n\r\n/**\r\n * @module 背景颜色\r\n * @description 填充背景颜色方案\r\n * @method background-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义背景的颜色，默认值：#eee <2.0.0>\r\n */\r\n@mixin background-color($color: #eee) {\r\n    background-color: $color;\r\n}\r\n\r\n/**\r\n * @module 文本颜色\r\n * @description 文本颜色方案\r\n * @method text-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本的颜色，默认值：#333 <2.0.0>\r\n */\r\n@mixin text-color($color: #333) {\r\n    color: $color;\r\n}\r\n/**\r\n * @module 文本行高\r\n * @description 文本行高方案\r\n * @method line-height\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本行高，默认值：1 <2.0.0>\r\n */\r\n@mixin line-height($lineheight: 1) {\r\n    line-height: $lineheight;\r\n}\r\n/**\r\n * @module 字体大小\r\n * @description 字体大小方案\r\n * @method font-size\r\n * @version 1.0.0\r\n * @param {Length} $size 字体大小，默认值：0.12rem <2.0.0>\r\n */\r\n@mixin font-size($size: 0.12rem) {\r\n    font-size: $size;\r\n}\r\n/**\r\n * @module 文本对齐方式\r\n * @description 文本对齐方式\r\n * @method fontsize\r\n * @version 1.0.0\r\n * @param {Length} $val 文本对齐方式，默认值：居中\r\n */\r\n@mixin text-align($val: center) {\r\n    text-align: $val;\r\n}\r\n\r\n/**\r\n * @module 内边距\r\n * @description 内边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\r\n@mixin padding($val: 5px) {\r\n  padding: $val;\r\n}\r\n/**\r\n * @module 字体样式\r\n * @description 字体样式\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val bold\r\n */\r\n@mixin font-weight($val: bold) {\r\n  font-weight: $val;\r\n}\r\n/**\r\n * @module 外边距\r\n * @description 外边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\r\n@mixin margin($val: 5px) {\r\n  margin: $val;\r\n}\r\n\r\n@mixin display($val) {\r\n  display: $val;\r\n}\r\n\r\n@mixin box-shadow($val) {\r\n    box-shadow: $val\r\n}\r\n\r\n@mixin color($val) {\r\n    color: $val\r\n}","@charset \"utf-8\";\r\n@import \"base\";\r\n@import \"variables\";\r\n@import \"function\";\r\n@import \"classes\";\r\n/**\r\n * 全局Reset\r\n * 重置Mobile及高级浏览器上常见的差异\r\n */\r\n\r\n// 1. 将元素的盒模型统一为: border-box\r\n// 2. 清除元素tap时出现的焦点框\r\n*,\r\n::before,\r\n::after {\r\n    @include box-sizing(border-box);\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n// 1. 默认禁止body滚动\r\n@include root-scroll;\r\n\r\n// 1. 隐藏页面滚动条\r\n::-webkit-scrollbar {\r\n    @if map-get($setting, is-scrollbar) == false {\r\n        display: none;\r\n    }\r\n}\r\n\r\n// 1. 防止用户自定义网页背景及文字颜色、大小影响\r\nhtml {\r\n    background-color: map-get($base, doc-bgcolor);\r\n    color: map-get($base, color);\r\n    // 定义root字号，作为rem计算基准\r\n    @if map-get($base, responsive-type) == scaling {\r\n        // 如果是跟随屏幕大小而变的场景，使用 vw\r\n        font-size: map-get($base, font-size-root-scaling);\r\n    } @else {\r\n        // 如果是常规场景，使用 px\r\n        font-size: map-get($base, font-size-root);\r\n    }\r\n    // 是否允许横竖屏时字号调整\r\n    @if map-get($setting, is-text-size-adjust) == false {\r\n        // 如果为flase，则不允许自动调整\r\n        -webkit-text-size-adjust: 100%;\r\n    }\r\n    @include user-select;\r\n}\r\n\r\n// 1. 清除body的默认margin\r\n// 2. 定义页面的默认字号\r\n// 3. 定义页面的默认行高\r\n// 4. 定义页面的默认字体\r\nbody {\r\n    margin: 0;\r\n    font-size: map-get($base, font-size);\r\n    line-height: map-get($base, line-height);\r\n    font-family: map-get($base, font-family);\r\n}\r\n\r\n// 1. 清除某些元素在不同浏览器下内外补白不同造成的影响\r\nul,\r\nol,\r\ndl,\r\ndd,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\nfigure,\r\nform,\r\nfieldset,\r\nlegend,\r\ninput,\r\ntextarea,\r\nbutton,\r\np,\r\nblockquote,\r\nth,\r\ntd,\r\npre,\r\nxmp {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n// 1. 为不继承的元素设定继承父级行高\r\n// 2. 为不继承的元素设定继承父级字体\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect,\r\npre,\r\nxmp,\r\ntt,\r\ncode,\r\nkbd,\r\nsamp {\r\n    line-height: inherit;\r\n    font-family: inherit;\r\n}\r\n\r\n// 1. 为不继承的元素设定继承父级字号\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\nsmall,\r\nbig,\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect {\r\n    font-size: inherit;\r\n}\r\n\r\n// 1. 重置斜体表现为正常文本\r\naddress,\r\ncite,\r\ndfn,\r\nem,\r\ni,\r\noptgroup,\r\nvar {\r\n    font-style: normal;\r\n}\r\n\r\n// 1. 清除单元格边距并让边框合并\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n    table-layout: fixed;\r\n    text-align: left;\r\n}\r\n\r\n// 1. 清除列表默认序号\r\nul,\r\nol,\r\nmenu {\r\n    list-style: none;\r\n}\r\n\r\n// 1. 清除默认边框\r\n// 2. 清除img底部留白问题，并使得默认居中\r\nfieldset,\r\nimg {\r\n    border: 0;\r\n    vertical-align: middle;\r\n}\r\n\r\n// 1. 设置HTML5部分新增元素为块元素\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n    display: block;\r\n}\r\n\r\n// 1. 设置HTML5新增媒体元素与img, object保持一致\r\naudio,\r\ncanvas,\r\nvideo {\r\n    display: inline-block;\r\n}\r\n\r\n// 1. 清除引用元素的默认派生标识\r\nblockquote:before,\r\nblockquote:after,\r\nq:before,\r\nq:after {\r\n    content: \"\\0020\";\r\n}\r\n\r\n// 1. 设置文本域和代码块在需要时出现滚动条\r\ntextarea,\r\npre,\r\nxmp {\r\n    @include overflow;\r\n}\r\n\r\n// 1. 设置文本域滚可拖动改变垂直方向尺寸\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n// 1. 清除webkit下表单元素的outline\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect\r\na {\r\n    outline: 0 none;\r\n}\r\n\r\n// 1. 让表单元素具有颜色继承\r\n// 2. iOS上当禁用时会设置opacity: .4\r\ninput,\r\ntextarea,\r\nbutton,\r\nselect {\r\n    color: inherit;\r\n    &:disabled {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n// 1. 清除Firefox按钮内部边框和补白\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    padding: 0;\r\n    border: 0;\r\n}\r\n\r\n// 1. 重置按钮的外观\r\ninput[type=\"button\"],\r\ninput[type=\"submit\"],\r\ninput[type=\"reset\"],\r\ninput[type=\"file\"]::-webkit-file-upload-button,\r\ninput[type=\"search\"]::-webkit-search-cancel-button {\r\n    @include appearance;\r\n}\r\n\r\n// 1. 重置mark元素的默认背景色\r\nmark {\r\n    background-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n// 1. 清除文本线条装饰\r\na,\r\nins,\r\ns,\r\nu,\r\ndel {\r\n    text-decoration: none;\r\n}\r\n\r\n// 1. 禁止长按链接与图片弹出菜单\r\n// issues: 在iOS8.1下此设置对a仍无效\r\na,\r\nimg {\r\n    -webkit-touch-callout: none;\r\n}\r\n\r\n// 1. 预设默认链接表现\r\na {\r\n    color: map-get($base, link-color);\r\n}\r\n\r\n// 1. fix Android Browser 4.2.* 及以下 input:checked ~ .xxx 失效的问题\r\nhtml + input {}\r\n\r\n// 1. 预设清除浮动\r\n.g-clear,\r\n.g-mod {\r\n    @include clearfix;\r\n}\r\n\r\n// 1. 使用字体图标\r\n@include yofont;\r\n","@charset \"utf-8\";\r\n/**\r\n * 全局基础方法\r\n * 包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法\r\n */\r\n\r\n/**\r\n * @module 功能\r\n * @description 给需要的属性加厂家前缀\r\n * @method _prefix\r\n * @version 1.0.0\r\n * @param {String} $property 指定属性 <1.0.0>\r\n * @param {String} $value 指定属性值 <1.0.0>\r\n * @skip\r\n */\r\n@mixin prefix($property, $value) {\r\n    // 老式浏览器\r\n    // 是否开启厂商前缀支持\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        // 遍历输出厂商代码\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            #{$vendor}#{$property}: $value;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    #{$property}: $value;\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义字体图标\r\n * @method _yofont\r\n * @version 1.0.0\r\n * @skip\r\n */\r\n@mixin yofont() {\r\n    // 是否开启图标字体\r\n    @if map-get($ico, is-use) {\r\n        @font-face {\r\n            font-family: map-get($ico, font-name);\r\n            src:\r\n                // 现代浏览器\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.woff) format(\"woff\"),\r\n                // Android2.2+\r\n                url(#{map-get($ico,font-path)}#{map-get($ico,font-name)}.ttf) format(\"truetype\");\r\n        }\r\n        .yo-ico {\r\n            font-family: map-get($ico, font-name) !important;\r\n            font-style: normal;\r\n            -webkit-font-smoothing: antialiased;\r\n            // PC端chrome有锯齿问题，Mobile不需要\r\n            // -webkit-text-stroke-width: .1px;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 四则运算(iOS6.0+,Android4.4+)\r\n * @method calc\r\n * @version 1.7.0\r\n * @param {String} $property 指定需要进行计算的CSS属性 <1.7.0>\r\n * @param {String} $value 与原生CSS语法一致，区别在于需要使用引号包裹表达式 <1.7.0>\r\n * @example <div class=\"calc\">四则运算</div>\r\n * .calc { @include calc(width, \"100% - 100px\"); }\r\n */\r\n@mixin calc($property, $value) {\r\n    // 是否开启厂商前缀支持\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        // 遍历输出厂商代码\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            // 输出所有厂商前缀（IE9.0+支持标准写法，更早版本不支持该函数）\r\n            @if $vendor != -ms- {\r\n                #{$property}: #{$vendor}calc(#{$value});\r\n            }\r\n        }\r\n    }\r\n    #{$property}: calc(#{$value});\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义响应式方案\r\n * @method responsive\r\n * @version 1.0.0\r\n * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>\r\n */\r\n@mixin responsive($media) {\r\n    @if not map-has-key($media-types, $media) {\r\n        @warn \"#{$media} is not a known media type. Using portrait instead.\";\r\n        $media: portrait;\r\n    }\r\n    @media #{map-get($media-types, $media)} {\r\n        @content;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 清除浮动方案\r\n * @method clearfix\r\n * @version 1.0.0\r\n * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>\r\n */\r\n@mixin clearfix($type: pseudo-element) {\r\n    @if $type == pseudo-element {\r\n        // 创建伪元素用以清除自身浮动\r\n        &::after{\r\n            display: block;\r\n            overflow: hidden;\r\n            clear: both;\r\n            height: 0;\r\n            content: \"\\0020\";\r\n        }\r\n    } @else {\r\n        // 创建BFC用以清除自身浮动\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 清除行内级元素间间隙方案\r\n * @method killspace\r\n * @version 1.0.0\r\n * @param {Length} $font-size 指定子元素字号，默认值：.14rem <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <span class=\"item\">1</span>\r\n *      <span class=\"item\">2</span>\r\n *      <span class=\"item\">3</span>\r\n * </div>\r\n * .demo {@include killspace;}\r\n */\r\n@mixin killspace($font-size: .14rem) {\r\n    font-size: 0;\r\n    font-family: arial;\r\n    > .item {\r\n        display: inline-block;\r\n        font-size: $font-size;\r\n        font-family: map-get($base, font-family);\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 元素在包含块中的对齐方式，默认为水平垂直对齐\r\n * @method align\r\n * @version 2.0.0\r\n * @param {String} $flexbox 指定包含块布局方式，可选值：flex | inline-flex，默认值：flex <2.0.0>\r\n * @param {String} $type 指定居中元素类型，可选值：image | text | other，默认值：text <2.0.0>\r\n * @param {Keywords} $justify-content 指定元素水平对齐方式，取值与`justify-content`属性一致，默认值：center <2.0.0>\r\n * @param {Keywords} $align-items 指定元素垂直对齐方式，取值与`align-items`属性一致，默认值：center <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <img class=\"item\" alt=\"未知尺寸图片居中\" />\r\n * </div>\r\n * .demo {@include align;}\r\n */\r\n@mixin align($flexbox: flex, $type: text, $justify-content: center, $align-items: center) {\r\n    @include flexbox($flexbox);\r\n    @include justify-content($justify-content);\r\n    @include align-items($align-items);\r\n    @if $type == text {\r\n        @include wrap;\r\n    }\r\n    > .item {\r\n        @if $type == image {\r\n            max-width: 100%;\r\n            max-height: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义文档根节点是否允许滚动\r\n * @method root-scroll\r\n * @version 1.4.0\r\n * @param {Boolean} $is-scroll 指定是否有滚动，默认值：false <1.8.6>\r\n */\r\n@mixin root-scroll($is-scroll: false) {\r\n    html,\r\n    body {\r\n        @if $is-scroll {\r\n            overflow: visible;\r\n            height: auto;\r\n        } @else {\r\n            overflow: hidden;\r\n            height: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 定义是否有滚动条\r\n * @method overflow\r\n * @version 1.0.0\r\n * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>\r\n */\r\n@mixin overflow($overflow: auto) {\r\n    @if $overflow == auto {\r\n        overflow: auto;\r\n        // 移除此条规则，防止iOS8.0+ webview崩溃\r\n        -webkit-overflow-scrolling: touch;\r\n    } @else {\r\n        overflow: $overflow;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 功能\r\n * @description 生成全屏方法\r\n * @method fullscreen\r\n * @version 1.7.0\r\n * @param {Integer} $z-index 指定层叠级别 <1.7.0>\r\n * @param {Keywords} $position 指定定位方式，取除`static | relative`之外的值，默认值：absolute <1.8.5>\r\n */\r\n@mixin fullscreen($z-index: null, $position: absolute) {\r\n    position: $position;\r\n    z-index: $z-index;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义使用何种滤镜\r\n * @method filter\r\n * @version 1.7.0\r\n * @param {String} $filter 取值与`filter`属性一致 <1.7.0>\r\n */\r\n@mixin filter($filter...) {\r\n    @include prefix(filter, $filter);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义UA默认外观\r\n * @method appearance\r\n * @version 1.0.0\r\n * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin appearance($appearance: none) {\r\n    @include prefix(appearance, $appearance);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义如何选中内容\r\n * @method user-select\r\n * @version 1.0.0\r\n * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>\r\n */\r\n@mixin user-select($user-select: none) {\r\n    @include prefix(user-select, $user-select);\r\n}\r\n\r\n/**\r\n * @module 用户界面\r\n * @description 定义盒模型\r\n * @method box-sizing\r\n * @version 1.0.0\r\n * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>\r\n */\r\n@mixin box-sizing($box-sizing: border-box) {\r\n    @include prefix(box-sizing, $box-sizing);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义渐变色值\r\n * @method gradient\r\n * @version 1.0.0\r\n * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial <1.0.0>\r\n * @param {String} $dir 指定渐变方向，可选值：[left | right] || [top | bottom] | angle <2.0.0>\r\n * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致 <1.0.0>\r\n */\r\n@mixin gradient($type, $dir, $color-stop...) {\r\n    // 最新草案：当方向为top,right,bottom,left时需要使用关键字to\r\n    $dir-new: to;\r\n    $dir-x: right left;\r\n    $dir-y: top bottom;\r\n\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            background-image: $vendor$type#{-gradient($dir, $color-stop)};\r\n        }\r\n    }\r\n    @each $direction in $dir {\r\n        @if index($dir-x, $direction) != null {\r\n            $dir-new: append($dir-new, remove($dir-x, $direction), space);\r\n        } @else if index($dir-y, $direction) != null {\r\n            $dir-new: append($dir-new, remove($dir-y, $direction), space);\r\n        } @else {\r\n            $dir-new: $direction;\r\n        }\r\n    }\r\n\r\n    background-image: $type#{-gradient($dir-new, $color-stop)};\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景图像缩放（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-size\r\n * @version 1.4.0\r\n * @param {Keywords | Length} $background-size 指定背景图缩放值，取值与`background-size`属性一致 <1.4.0>\r\n */\r\n@mixin background-size($background-size...) {\r\n    @include prefix(background-size, $background-size);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景裁减（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-clip\r\n * @version 1.6.0\r\n * @param {Keywords} $background-clip 指定背景图缩放值，取值与`background-clip`属性一致 <1.6.0>\r\n */\r\n@mixin background-clip($background-clip...) {\r\n    @include prefix(background-clip, $background-clip);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义背景显示区域（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-origin\r\n * @version 1.6.0\r\n * @param {Keywords} $background-origin 指定背景图`background-position`属性计算相对的参考点，取值与`background-origin`属性一致 <1.6.0>\r\n */\r\n@mixin background-origin($background-origin...) {\r\n    @include prefix(background-origin, $background-origin);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 定义圆角，用于修复某些安卓机型上“圆角+边框+背景”，背景溢出的情况\r\n * @method border-radius\r\n * @version 1.6.0\r\n * @param {Length} $border-radius 指定元素的圆角半径，取值与`border-radius`属性一致 <1.6.0>\r\n */\r\n@mixin border-radius($border-radius...) {\r\n    border-radius: $border-radius;\r\n    // 之所以会这样是因为这些机型的背景是从边框处开始渲染，所以只需要改成从padding处渲染即可\r\n    @include background-clip(padding-box !important);\r\n}\r\n\r\n/**\r\n * @module 背景与边框\r\n * @description 为元素添加边框（包括1px边框）\r\n * @method border\r\n * @version 2.0.0\r\n * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>\r\n * @param {String} $border-color 指定边框颜色 <2.0.0>\r\n * @param {String} $border-style 指定边框样式 <2.0.0>\r\n * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>\r\n */\r\n@mixin border($border-width: 1px, $border-color: map-get($base, border-color), $border-style: solid, $radius: null) {\r\n    // 为边框位置提供定位参考\r\n    position: relative;\r\n    @if $border-width == null {\r\n        $border-width: 0;\r\n    }\r\n    border-radius: $radius;\r\n    &::after {\r\n        // 用以解决边框layer遮盖内容\r\n        pointer-events: none;\r\n        position: absolute;\r\n        z-index: 999;\r\n        top: 0;\r\n        left: 0;\r\n        overflow: hidden;\r\n        content: \"\\0020\";\r\n        border-color: $border-color;\r\n        border-style: $border-style;\r\n        border-width: $border-width;\r\n        // 适配dpr进行缩放\r\n        @include responsive(retina1x) {\r\n            width: 100%;\r\n            height: 100%;\r\n            @if $radius != null {\r\n                border-radius: $radius;\r\n            }\r\n        }\r\n        @include responsive(retina2x) {\r\n            width: 200%;\r\n            height: 200%;\r\n            @include transform(scale(.5));\r\n            @if $radius != null {\r\n                border-radius: $radius * 2;\r\n            }\r\n        }\r\n        @include responsive(retina3x) {\r\n            width: 300%;\r\n            height: 300%;\r\n            @include transform(scale(.33333));\r\n            @if $radius != null {\r\n                border-radius: $radius * 3;\r\n            }\r\n        }\r\n        @include transform-origin(0 0);\r\n    }\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 定义简单变换\r\n * @method transform\r\n * @version 1.0.0\r\n * @param {String} $transform 取值范围与`transform`属性一致 <1.0.0>\r\n */\r\n@mixin transform($transform...) {\r\n    @include prefix(transform, $transform);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 定义变换原点\r\n * @method transform-origin\r\n * @version 1.0.0\r\n * @param {Length | Percentage | Keywords} $transform-origin 取值范围与`transform-origin`属性一致 <1.0.0>\r\n */\r\n@mixin transform-origin($transform-origin) {\r\n    @include prefix(transform-origin, $transform-origin);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定某元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化\r\n * @method transform-style\r\n * @version 2.0.0\r\n * @param {String} $transform-style 取值范围与`transform-style`属性一致 <2.0.0>\r\n */\r\n@mixin transform-style($transform-style) {\r\n    @include prefix(transform-style, $transform-style);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果。「z>0」的三维元素比正常大，而「z<0」时则比正常小，大小程度由该属性的值决定。\r\n * @method perspective\r\n * @version 2.0.0\r\n * @param {none | Length} $perspective 取值范围与`perspective`属性一致 <2.0.0>\r\n */\r\n@mixin perspective($perspective) {\r\n    @include prefix(perspective, $perspective);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定透视点的位置\r\n * @method perspective-origin\r\n * @version 2.0.0\r\n * @param {Length | Percentage | Keywords} $perspective-origin 取值范围与`perspective-origin`属性一致 <2.0.0>\r\n */\r\n@mixin perspective-origin($perspective-origin) {\r\n    @include prefix(perspective-origin, $perspective-origin);\r\n}\r\n\r\n/**\r\n * @module Transform\r\n * @description 指定元素背面面向用户时是否可见\r\n * @method backface-visibility\r\n * @version 2.0.0\r\n * @param {Keywords} $backface-visibility 取值范围与`backface-visibility`属性一致 <2.0.0>\r\n */\r\n@mixin backface-visibility($backface-visibility) {\r\n    @include prefix(backface-visibility, $backface-visibility);\r\n}\r\n\r\n/**\r\n * @module Animation\r\n * @description 定义动画\r\n * @method animation\r\n * @version 1.0.0\r\n * @param {String} $animation 取值与原生语法一致 <1.0.0>\r\n */\r\n@mixin animation($animation...) {\r\n    @include prefix(animation, $animation);\r\n}\r\n\r\n/**\r\n * @module Transition\r\n * @description 定义补间\r\n * @method transition\r\n * @version 1.0.0\r\n * @param {String} $transition 取值与原生语法一致 <1.0.0>\r\n */\r\n@mixin transition($transition...){\r\n    $prefix-properties: transform, transform-origin;\r\n    $vendor-list: ();\r\n\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @for $i from 1 through length($transition) {\r\n                @if index($prefix-properties, nth(nth($transition, $i), 1)) {\r\n                    $vendor-list: join($vendor-list, #{$vendor}#{nth($transition, $i)}, comma);\r\n                } @else {\r\n                    $vendor-list: join($vendor-list, #{nth($transition, $i)}, comma);\r\n                }\r\n            }\r\n            #{$vendor}transition: $vendor-list;\r\n        }\r\n    }\r\n\r\n    transition: $transition;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义显示类型为伸缩盒\r\n * @method flexbox\r\n * @version 1.0.0\r\n * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>\r\n */\r\n@mixin flexbox($flexbox: flex) {\r\n    @if $flexbox == inline-flex or $flexbox == inline {\r\n        $flexbox: \"inline-\";\r\n    } @else {\r\n        $flexbox: \"\";\r\n    }\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始草案：20090723\r\n    // 过渡草案：20110322-20120322（以后面这个日期为准）\r\n    // 最新草案：20120612-20140925（以后面这个日期为准）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}box;\r\n                display: #{$vendor}#{$flexbox}flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                display: #{$vendor}#{$flexbox}flexbox;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    display: #{$flexbox}flex;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素如何分配空间\r\n * @method flex\r\n * @version 1.0.0\r\n * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>\r\n * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>\r\n */\r\n@mixin flex($flex: 1, $direction: row) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    // 原始版本box-flex并不是复合属性，所以只有一个为数字的值\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-flex: $flex;\r\n                #{$vendor}flex: $flex;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex: $flex;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex: $flex;\r\n    // 修复Android Browser4.3及以下，iOS Safari6.1及以下按比例分配错误的问题（同时还包括flex嵌套时分配错误）\r\n    @if $direction == row {\r\n        width: .1px;\r\n    } @else {\r\n        height: .1px;\r\n    }\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的排版顺序\r\n * @method order\r\n * @version 1.0.0\r\n * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>\r\n */\r\n@mixin order($order: 1) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            @if $vendor != -ms- {\r\n                // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                #{$vendor}box-ordinal-group: $order;\r\n                #{$vendor}order: $order;\r\n            } @else {\r\n                // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                #{$vendor}flex-order: $order;\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    order: $order;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(iOS7.0+,Android4.4+)\r\n * @method flex-flow\r\n * @version 2.0.0\r\n * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>\r\n */\r\n@mixin flex-flow($flex-flow: row nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    @include prefix(flex-flow, $flex-flow);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的流动方向\r\n * @method flex-direction\r\n * @version 1.0.0\r\n * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>\r\n */\r\n@mixin flex-direction($flex-direction: row) {\r\n    // 老式浏览器（实验性质支持原始草案）\r\n    // 当厂商前缀不为`-ms-`时输出原始草案厂商前缀版\r\n    @if $flex-direction == row {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: normal;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == row-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: horizontal;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    } @else if $flex-direction == column-reverse {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    #{$vendor}box-orient: vertical;\r\n                    #{$vendor}box-direction: reverse;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 老式浏览器（实验性质支持过渡及最新草案）\r\n    @if map-get($setting, is-vendor-prefix) {\r\n        @each $vendor in map-get($setting, vendor-prefix) {\r\n            // `flex-direction`属性在过渡和最新草案中语法一致\r\n            #{$vendor}flex-direction: $flex-direction;\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    flex-direction: $flex-direction;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素溢出后排版(iOS7.0+,Android4.4+)\r\n * @method flex-wrap\r\n * @version 1.0.0\r\n * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>\r\n */\r\n@mixin flex-wrap($flex-wrap: nowrap) {\r\n    // 老式浏览器（实验性质支持过渡和最新2个阶段草案）+ 现代浏览器\r\n    // 原始草案有`box-lines`对应本属性，不过虽然被webkit实验性质支援，但却未被任何浏览器实现（等同于未实现）\r\n    @include prefix(flex-wrap, $flex-wrap);\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)\r\n * @method justify-content\r\n * @version 1.0.0\r\n * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin justify-content($justify-content: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $justify-content == center {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: $justify-content;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: $justify-content;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: start;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: end;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-pack: justify;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $justify-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    // 原始草案不支持`space-around`(过渡版本中的`distribute`) 值\r\n                    //#{$vendor}box-pack: distribute;\r\n                    #{$vendor}justify-content: $justify-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    justify-content: $justify-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义多行弹性容器侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-content\r\n * @version 1.8.5\r\n * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>\r\n */\r\n@mixin align-content($align-content: center) {\r\n    // 老式浏览器（实验性质支持2个阶段草案）\r\n    @if $align-content == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-between {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: justify;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == space-around {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: distribute;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-content == center or $align-content == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-content: $align-content;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-line-pack: $align-content;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-content: $align-content;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义单行弹性容器侧轴对齐方式\r\n * @method align-items\r\n * @version 1.0.0\r\n * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-items($align-items: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-items == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: start;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-items == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: end;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else {\r\n        // 取值为center | baseline | stretch时，3个阶段草案均相同\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输出原始和最新草案厂商前缀版\r\n                    #{$vendor}box-align: $align-items;\r\n                    #{$vendor}align-items: $align-items;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-align: $align-items;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-items: $align-items;\r\n}\r\n\r\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器中子元素自身的在侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-self\r\n * @version 1.0.0\r\n * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>\r\n */\r\n@mixin align-self($align-self: center) {\r\n    // 老式浏览器（实验性质支持3个阶段草案）\r\n    @if $align-self == flex-start {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: start;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == flex-end {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: end;\r\n                }\r\n            }\r\n        }\r\n    } @else if $align-self == auto or $align-self == center or $align-self == baseline or $align-self == stretch {\r\n        @if map-get($setting, is-vendor-prefix) {\r\n            @each $vendor in map-get($setting, vendor-prefix) {\r\n                @if $vendor != -ms- {\r\n                    // 当厂商前缀不为`-ms-`时输最新草案厂商前缀版（原始草案没有类似属性）\r\n                    #{$vendor}align-self: $align-self;\r\n                } @else {\r\n                    // 当厂商前缀为`-ms-`时输出过渡草案厂商前缀版\r\n                    #{$vendor}flex-item-align: $align-self;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 现代浏览器（支持最新草案）\r\n    align-self: $align-self;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成矩形方法\r\n * @method rect\r\n * @version 1.0.0\r\n * @param {Length} $width 定义矩形的长度 <1.0.0>\r\n * @param {Length} $height 定义矩形的高度 <1.0.0>\r\n */\r\n@mixin rect($width, $height) {\r\n    width: $width;\r\n    height: $height;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成正方形方法\r\n * @method square\r\n * @version 1.0.0\r\n * @param {Length} $size 定义正方形的边长 <1.0.0>\r\n */\r\n@mixin square($size) {\r\n    width: $size;\r\n    height: $size;\r\n}\r\n\r\n/**\r\n * @module 形状\r\n * @description 生成圆形方法\r\n * @method circle\r\n * @version 1.0.0\r\n * @param {Length} $size 定义圆的半径长度 <1.0.0>\r\n * @param {Length} $radius 定义圆的圆角半径长度 <1.0.0>\r\n */\r\n@mixin circle($size, $radius: 50%) {\r\n    @include square($size);\r\n    @include border-radius($radius);\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 链接处理方法\r\n * @method link\r\n * @version 1.0.0\r\n * @param {Color} $color 定义链接颜色 <1.0.0>\r\n */\r\n@mixin link($color: map-get($base, link-color)) {\r\n    color: $color;\r\n    cursor: pointer;\r\n    &:active {\r\n        opacity: .5;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 文本碰到边界是否换行\r\n * @method wrap\r\n * @version 1.0.0\r\n * @param {Boolean} $is-wrap 定义文本是否换行，默认值：true <2.0.0>\r\n */\r\n@mixin wrap($is-wrap: true) {\r\n    @if $is-wrap == true {\r\n        word-wrap: break-word;\r\n        word-break: break-all;\r\n    } @else {\r\n        white-space: nowrap;\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 单行文本溢出时显示省略号\r\n * @method ellipsis\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n * @param {Integer} $line-clamp 定义需要显示的行数，默认值：1（即使用单行溢出的处理方案），需要注意的是本参数只支持webkit内核 <2.1.2>\r\n */\r\n@mixin ellipsis($width: null, $line-clamp: 1) {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: $width;\r\n    @if abs($line-clamp) > 1 {\r\n        // 要使得多行截取生效，display的值只能为-webkit-box\r\n        display: -webkit-box !important;\r\n        -webkit-line-clamp: $line-clamp;\r\n        @include flex-direction(column);\r\n    } @else {\r\n        @include wrap(false);\r\n    }\r\n}\r\n\r\n/**\r\n * @module 文本\r\n * @description 文字隐藏方案\r\n * @method texthide\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n */\r\n@mixin texthide($width: null) {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-indent: 100%;\r\n    width: $width;\r\n}\r\n\r\n\r\n/**\r\n * @module 背景颜色\r\n * @description 填充背景颜色方案\r\n * @method background-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义背景的颜色，默认值：#eee <2.0.0>\r\n */\r\n@mixin background-color($color: #eee) {\r\n    background-color: $color;\r\n}\r\n\r\n/**\r\n * @module 文本颜色\r\n * @description 文本颜色方案\r\n * @method text-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本的颜色，默认值：#333 <2.0.0>\r\n */\r\n@mixin text-color($color: #333) {\r\n    color: $color;\r\n}\r\n/**\r\n * @module 文本行高\r\n * @description 文本行高方案\r\n * @method line-height\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本行高，默认值：1 <2.0.0>\r\n */\r\n@mixin line-height($lineheight: 1) {\r\n    line-height: $lineheight;\r\n}\r\n/**\r\n * @module 字体大小\r\n * @description 字体大小方案\r\n * @method font-size\r\n * @version 1.0.0\r\n * @param {Length} $size 字体大小，默认值：0.12rem <2.0.0>\r\n */\r\n@mixin font-size($size: 0.12rem) {\r\n    font-size: $size;\r\n}\r\n/**\r\n * @module 文本对齐方式\r\n * @description 文本对齐方式\r\n * @method fontsize\r\n * @version 1.0.0\r\n * @param {Length} $val 文本对齐方式，默认值：居中\r\n */\r\n@mixin text-align($val: center) {\r\n    text-align: $val;\r\n}\r\n\r\n/**\r\n * @module 内边距\r\n * @description 内边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\r\n@mixin padding($val: 5px) {\r\n  padding: $val;\r\n}\r\n/**\r\n * @module 字体样式\r\n * @description 字体样式\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val bold\r\n */\r\n@mixin font-weight($val: bold) {\r\n  font-weight: $val;\r\n}\r\n/**\r\n * @module 外边距\r\n * @description 外边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\r\n@mixin margin($val: 5px) {\r\n  margin: $val;\r\n}\r\n\r\n@mixin display($val) {\r\n  display: $val;\r\n}\r\n\r\n@mixin box-shadow($val) {\r\n    box-shadow: $val\r\n}\r\n\r\n@mixin color($val) {\r\n    color: $val\r\n}","@charset \"utf-8\";\r\n/**\r\n * 全局base定义\r\n * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方\r\n * 本文件中map使用\"_\"开头，extra中不使用\"_\"\r\n * base ⇌ extra\r\n */\r\n\r\n// base\r\n$base: (\r\n    // root字号类型：normal | scaling\r\n    // normal表示root字号使用 `font-size-root`\r\n    // scaling表示root字号使用 `font-size-root-scaling`\r\n    responsive-type:        'normal',\r\n    // html root使用100px，方便rem单位的换算\r\n    font-size-root:         100px,\r\n    // 适配：用于做元素随屏幕大小而变化的情况\r\n    font-size-root-scaling: 31.25vw,\r\n    // body的默认字号（文档基准字号）\r\n    // chrome37-45/opera24-33在body上使用rem时有个bug（其他版本未测），后续版本已被修复:\r\n    // 只要引用了外部样式，不论里面的内容是什么，body上的rem就会失效\r\n    // 这时在开发者工具里，关闭又开启一次该条属性，则生效，刷新又挂\r\n    // 由于body是html的子元素，所以对于body来讲，此时rem与em的效果是相同的\r\n    font-size:            .14em,\r\n    // font-family\r\n    font-family:          #{\"Helvetica Neue\", Helvetica, STHeiTi, sans-serif},\r\n    // lin-height\r\n    line-height:          1.5,\r\n    // 默认文档背景色\r\n    doc-bgcolor:          #ffffff,\r\n    // 默认边框色\r\n    border-color:         #ccc,\r\n    // 默认次级边框色\r\n    sub-border-color:     #ddd,\r\n    // 默认背景颜色\r\n    bgcolor:              #ffffff,\r\n    // 默认文本颜色\r\n    color:                #333,\r\n    // 默认次级文本颜色\r\n    sub-color:            #666,\r\n    // 默认边框色\r\n    disabled-border-color:#ccc,\r\n    // 默认文档颜色\r\n    disabled-bgcolor:     #e0e0e0,\r\n    // 默认禁用文本颜色\r\n    disabled-color:       #bbb,\r\n    // 高亮色\r\n    light-color:          #FE0053,\r\n    // 价格颜色\r\n    price-color:          #f60,\r\n    // 默认链接色\r\n    link-color:           #00afc7,\r\n    // 链接经过色\r\n    link-hover-color:     #f60\r\n);\r\n","@charset \"utf-8\";\r\n/**\r\n * 全局Variables\r\n * 基础变量map，如果不想定义某属性，将其value设置为null\r\n * 仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方\r\n * 本文件中map使用\"_\"开头，config中不使用\"_\"\r\n * variables ⇌ config\r\n */\r\n\r\n// 基本设置\r\n$setting: (\r\n    // {String} 版本号\r\n    version:             \"2.1.3\",\r\n    // {Boolean} 是否开启厂商前缀\r\n    is-vendor-prefix:    true,\r\n    // {String} 厂商前缀\r\n    vendor-prefix:       -webkit-,\r\n    // {String} 背景图片服务器\r\n    bgimg-domain:        \"//s.qunarzz.com/yo/bgimg/\",\r\n    // {Boolean} 是否允许横竖屏时文本字号自动调整\r\n    is-text-size-adjust: true,\r\n    // {Boolean} 是否显示页面滚动条\r\n    is-scrollbar:        false\r\n);\r\n\r\n// responsive media types\r\n$media-types: (\r\n    // {String} 横屏\r\n    landscape: \"(orientation: landscape)\",\r\n    // {String} 竖屏\r\n    portrait:  \"(orientation: portrait)\",\r\n    // 视网膜屏定义，这里不做非常细节的界定，比如完全一致的整数倍\r\n    // retina1x：< 1.5dppx；\r\n    // retina2x：1.5dppx ~ 2.49dppx\r\n    // retina3x：>= 2.5dppx\r\n    // {String} 非视网膜屏\r\n    retina1x:  \"(max--moz-device-pixel-ratio: 1.49),\r\n                (-webkit-max-device-pixel-ratio: 1.49),\r\n                (max-device-pixel-ratio: 1.49),\r\n                (max-resolution: 143dpi),\r\n                (max-resolution: 1.49dppx)\",\r\n    // {String} 视网膜屏2x\r\n    retina2x:  \"(min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49),\r\n                (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49),\r\n                (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49),\r\n                (min-resolution: 144dpi) and (max-resolution: 239dpi),\r\n                (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx)\",\r\n    // {String} 视网膜屏3x\r\n    retina3x:  \"(min--moz-device-pixel-ratio: 2.5),\r\n                (-webkit-min-device-pixel-ratio: 2.5),\r\n                (min-device-pixel-ratio: 2.5),\r\n                (min-resolution: 240dpi),\r\n                (min-resolution: 2.5dppx)\",\r\n    // 待添加stop-points\r\n    // 用于常规手机横竖屏\r\n    xs:        \"(max-width: 767px)\",\r\n    // 用于常规pad横竖屏\r\n    s:         \"(min-width: 768px) and (max-width: 1024px)\",\r\n    // 用于常规笔记本\r\n    m:         \"(min-width: 1025px) and (max-width: 1280px)\",\r\n    // 用于常规台式机\r\n    l:         \"(min-width: 1281px) and (max-width: 1440px)\",\r\n    // 用于超大台式机\r\n    xl:        \"(min-width: 1441px)\"\r\n);\r\n\r\n// ico font\r\n$ico: (\r\n    // {Boolean} 是否使用图标字体\r\n    is-use:     true,\r\n    // {String} 图标字体文件名\r\n    font-name:  yofont,\r\n    // {Url} 图标字体路径\r\n    font-path:  \"//ss.qunarzz.com/yo/font/1.0.3/\"\r\n);\r\n\r\n// z-index\r\n$z-index: (\r\n    // {Number} 下拉菜单层级范围50-100\r\n    dropdown:    50,\r\n    // {Number} 遮罩层级\r\n    mask:        1000,\r\n    // {Number} 弹窗层级范围1001-1500\r\n    dialog:      1001,\r\n    // {Number} 浮层层级范围1501-2000\r\n    popup:       1501,\r\n    // {Number} 搜索层级范围2001-2500\r\n    suggest:     2001,\r\n    // {Number} 搜索层级范围2501-3000\r\n    actionsheet: 2501,\r\n    // {Number} 浮层层级范围3001-3500\r\n    tooltip:     3001,\r\n    // {Number} loading层级\r\n    loading:     9999\r\n);\r\n\r\n// Layout align\r\n$align: (\r\n    // {String} 定义弹性水平对齐方式\r\n    justify-content: center,\r\n    // {String} 定义弹性垂直对齐方式\r\n    align-items:     center\r\n);\r\n\r\n// Layout column(1)\r\n$column: (\r\n    // {Length} 容器高度，取值：[auto|cover]\r\n    size:     auto\r\n);\r\n\r\n// Layout flex\r\n$flex: (\r\n    // {String} 定义是水平布局还是垂直布局: row | column\r\n    direction: column\r\n);\r\n\r\n// Layout Stacked\r\n$stacked: (\r\n    // {Length} 区块外边距\r\n    margin: .2rem .1rem\r\n);\r\n","@charset \"UTF-8\";\n/**\r\n * 全局base定义\r\n * 本文件与variables不同地方在于，这里所定义的map可以使用在variables和任何地方\r\n * 本文件中map使用\"_\"开头，extra中不使用\"_\"\r\n * base ⇌ extra\r\n */\n/**\r\n * 全局Variables\r\n * 基础变量map，如果不想定义某属性，将其value设置为null\r\n * 仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方\r\n * 本文件中map使用\"_\"开头，config中不使用\"_\"\r\n * variables ⇌ config\r\n */\n/**\r\n * 自定义全局函数\r\n * 扩充Sass默认函数库，用以增强语法\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的第一项\r\n * @function first\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的最后一项\r\n * @function last\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 返回SassList中的倒数第几项\r\n * @function nth-last\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $index 指定需要返回的值在list中的倒数位置 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 移除SassList中的某个项目并返回新的List\r\n * @function remove\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {String} $value 指定需要被删除的值 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 截取SassList中的某个部分并返回新的List\r\n * @function slice\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $start 指定需要截取的开始下标 <2.1.0>\r\n * @param {Integer} $end 指定需要截取的结束下标（不包括end），当该值缺省时默认为末尾下标 <2.1.0>\r\n */\n/**\r\n * @module List扩展函数\r\n * @description 从SassList中添加/删除项目，然后返回新的List。\r\n * @function splice\r\n * @version 2.1.0\r\n * @param {String} $list 指定一个Sass List <2.1.0>\r\n * @param {Integer} $index 指定需要移除的开始下标 <2.1.0>\r\n * @param {Integer} $count 指定需要移除的数量，不可以为负值，0表示不移除 <2.1.0>\r\n * @param {String} $values 指定需要添加的新值（可以是多个），如果该值缺省，则表示只移除不添加新值 <2.1.0>\r\n */\n/**\r\n * 全局基础方法\r\n * 包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法\r\n */\n/**\r\n * @module 功能\r\n * @description 给需要的属性加厂家前缀\r\n * @method _prefix\r\n * @version 1.0.0\r\n * @param {String} $property 指定属性 <1.0.0>\r\n * @param {String} $value 指定属性值 <1.0.0>\r\n * @skip\r\n */\n/**\r\n * @module 功能\r\n * @description 定义字体图标\r\n * @method _yofont\r\n * @version 1.0.0\r\n * @skip\r\n */\n/**\r\n * @module 功能\r\n * @description 四则运算(iOS6.0+,Android4.4+)\r\n * @method calc\r\n * @version 1.7.0\r\n * @param {String} $property 指定需要进行计算的CSS属性 <1.7.0>\r\n * @param {String} $value 与原生CSS语法一致，区别在于需要使用引号包裹表达式 <1.7.0>\r\n * @example <div class=\"calc\">四则运算</div>\r\n * .calc { @include calc(width, \"100% - 100px\"); }\r\n */\n/**\r\n * @module 功能\r\n * @description 定义响应式方案\r\n * @method responsive\r\n * @version 1.0.0\r\n * @param {String} $media 指定媒体查询条件，取值为`config`文件map `media-types`中的值 <1.0.0>\r\n */\n/**\r\n * @module 功能\r\n * @description 清除浮动方案\r\n * @method clearfix\r\n * @version 1.0.0\r\n * @param {String} $type 指定清除浮动的方式，包括：pseudo-element | bfc，默认值：pseudo-element <1.8.5>\r\n */\n/**\r\n * @module 功能\r\n * @description 清除行内级元素间间隙方案\r\n * @method killspace\r\n * @version 1.0.0\r\n * @param {Length} $font-size 指定子元素字号，默认值：.14rem <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <span class=\"item\">1</span>\r\n *      <span class=\"item\">2</span>\r\n *      <span class=\"item\">3</span>\r\n * </div>\r\n * .demo {@include killspace;}\r\n */\n/**\r\n * @module 功能\r\n * @description 元素在包含块中的对齐方式，默认为水平垂直对齐\r\n * @method align\r\n * @version 2.0.0\r\n * @param {String} $flexbox 指定包含块布局方式，可选值：flex | inline-flex，默认值：flex <2.0.0>\r\n * @param {String} $type 指定居中元素类型，可选值：image | text | other，默认值：text <2.0.0>\r\n * @param {Keywords} $justify-content 指定元素水平对齐方式，取值与`justify-content`属性一致，默认值：center <2.0.0>\r\n * @param {Keywords} $align-items 指定元素垂直对齐方式，取值与`align-items`属性一致，默认值：center <2.0.0>\r\n * @example\r\n * <div class=\"demo\">\r\n *      <img class=\"item\" alt=\"未知尺寸图片居中\" />\r\n * </div>\r\n * .demo {@include align;}\r\n */\n/**\r\n * @module 功能\r\n * @description 定义文档根节点是否允许滚动\r\n * @method root-scroll\r\n * @version 1.4.0\r\n * @param {Boolean} $is-scroll 指定是否有滚动，默认值：false <1.8.6>\r\n */\n/**\r\n * @module 功能\r\n * @description 定义是否有滚动条\r\n * @method overflow\r\n * @version 1.0.0\r\n * @param {String} $overflow 取值与最新原生语法一致，默认值：auto <1.0.0>\r\n */\n/**\r\n * @module 功能\r\n * @description 生成全屏方法\r\n * @method fullscreen\r\n * @version 1.7.0\r\n * @param {Integer} $z-index 指定层叠级别 <1.7.0>\r\n * @param {Keywords} $position 指定定位方式，取除`static | relative`之外的值，默认值：absolute <1.8.5>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义使用何种滤镜\r\n * @method filter\r\n * @version 1.7.0\r\n * @param {String} $filter 取值与`filter`属性一致 <1.7.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义UA默认外观\r\n * @method appearance\r\n * @version 1.0.0\r\n * @param {String} $appearance 取值与`appearance`属性一致，默认值：none <1.0.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义如何选中内容\r\n * @method user-select\r\n * @version 1.0.0\r\n * @param {String} $user-select 取值与`user-select`属性一致，默认值：none <1.0.0>\r\n */\n/**\r\n * @module 用户界面\r\n * @description 定义盒模型\r\n * @method box-sizing\r\n * @version 1.0.0\r\n * @param {String} $box-sizing 指定盒模型类型，取值与`box-sizing`属性一致，默认值：border-box <1.0.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义渐变色值\r\n * @method gradient\r\n * @version 1.0.0\r\n * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial <1.0.0>\r\n * @param {String} $dir 指定渐变方向，可选值：[left | right] || [top | bottom] | angle <2.0.0>\r\n * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景图像缩放（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-size\r\n * @version 1.4.0\r\n * @param {Keywords | Length} $background-size 指定背景图缩放值，取值与`background-size`属性一致 <1.4.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景裁减（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-clip\r\n * @version 1.6.0\r\n * @param {Keywords} $background-clip 指定背景图缩放值，取值与`background-clip`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义背景显示区域（AndroidBrowser2.3.*还需要厂商前缀）\r\n * @method background-origin\r\n * @version 1.6.0\r\n * @param {Keywords} $background-origin 指定背景图`background-position`属性计算相对的参考点，取值与`background-origin`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 定义圆角，用于修复某些安卓机型上“圆角+边框+背景”，背景溢出的情况\r\n * @method border-radius\r\n * @version 1.6.0\r\n * @param {Length} $border-radius 指定元素的圆角半径，取值与`border-radius`属性一致 <1.6.0>\r\n */\n/**\r\n * @module 背景与边框\r\n * @description 为元素添加边框（包括1px边框）\r\n * @method border\r\n * @version 2.0.0\r\n * @param {String} $border-width 指定边框厚度（单位为px），默认值：1px，取值与`border-width`属性一致，不同方向代表边框位置 <2.0.0>\r\n * @param {String} $border-color 指定边框颜色 <2.0.0>\r\n * @param {String} $border-style 指定边框样式 <2.0.0>\r\n * @param {String} $radius 指定边框圆角半径，默认值：null <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 定义简单变换\r\n * @method transform\r\n * @version 1.0.0\r\n * @param {String} $transform 取值范围与`transform`属性一致 <1.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 定义变换原点\r\n * @method transform-origin\r\n * @version 1.0.0\r\n * @param {Length | Percentage | Keywords} $transform-origin 取值范围与`transform-origin`属性一致 <1.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定某元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化\r\n * @method transform-style\r\n * @version 2.0.0\r\n * @param {String} $transform-style 取值范围与`transform-style`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果。「z>0」的三维元素比正常大，而「z<0」时则比正常小，大小程度由该属性的值决定。\r\n * @method perspective\r\n * @version 2.0.0\r\n * @param {none | Length} $perspective 取值范围与`perspective`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定透视点的位置\r\n * @method perspective-origin\r\n * @version 2.0.0\r\n * @param {Length | Percentage | Keywords} $perspective-origin 取值范围与`perspective-origin`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Transform\r\n * @description 指定元素背面面向用户时是否可见\r\n * @method backface-visibility\r\n * @version 2.0.0\r\n * @param {Keywords} $backface-visibility 取值范围与`backface-visibility`属性一致 <2.0.0>\r\n */\n/**\r\n * @module Animation\r\n * @description 定义动画\r\n * @method animation\r\n * @version 1.0.0\r\n * @param {String} $animation 取值与原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module Transition\r\n * @description 定义补间\r\n * @method transition\r\n * @version 1.0.0\r\n * @param {String} $transition 取值与原生语法一致 <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义显示类型为伸缩盒\r\n * @method flexbox\r\n * @version 1.0.0\r\n * @param {String} $flexbox 默认值：flex，可选值：flex | inline-flex <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素如何分配空间\r\n * @method flex\r\n * @version 1.0.0\r\n * @param {Number} $flex 取值与`flex`属性一致，默认值：1 <1.0.0>\r\n * @param {String} $direction 默认值: row，可选值：row | column <1.5.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的排版顺序\r\n * @method order\r\n * @version 1.0.0\r\n * @param {Integer} $order 取值与`order`属性一致，默认值：1 <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素流动方向及遇见边界时是否换行(iOS7.0+,Android4.4+)\r\n * @method flex-flow\r\n * @version 2.0.0\r\n * @param {String} $flex-flow 取值与`flex-flow`属性一致，默认值：row nowrap <2.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义伸缩盒子元素的流动方向\r\n * @method flex-direction\r\n * @version 1.0.0\r\n * @param {String} $flex-direction 取值与`flex-direction`属性一致，默认值：row <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性盒子元素溢出后排版(iOS7.0+,Android4.4+)\r\n * @method flex-wrap\r\n * @version 1.0.0\r\n * @param {String} $flex-wrap 取值与`flex-wrap`属性一致，默认值：nowrap <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器主轴对齐方式(其中`space-around`值需要iOS7.0+,Android4.4+)\r\n * @method justify-content\r\n * @version 1.0.0\r\n * @param {String} $justify-content 取值与`justify-content`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义多行弹性容器侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-content\r\n * @version 1.8.5\r\n * @param {String} $align-content 取值与`align-content`属性一致，默认值：center <1.8.5>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义单行弹性容器侧轴对齐方式\r\n * @method align-items\r\n * @version 1.0.0\r\n * @param {String} $align-items 取值与`align-items`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module Flexbox\r\n * @description 定义弹性容器中子元素自身的在侧轴对齐方式(iOS7.0+,Android4.4+)\r\n * @method align-self\r\n * @version 1.0.0\r\n * @param {String} $align-self 取值与`align-self`属性一致，默认值：center <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成矩形方法\r\n * @method rect\r\n * @version 1.0.0\r\n * @param {Length} $width 定义矩形的长度 <1.0.0>\r\n * @param {Length} $height 定义矩形的高度 <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成正方形方法\r\n * @method square\r\n * @version 1.0.0\r\n * @param {Length} $size 定义正方形的边长 <1.0.0>\r\n */\n/**\r\n * @module 形状\r\n * @description 生成圆形方法\r\n * @method circle\r\n * @version 1.0.0\r\n * @param {Length} $size 定义圆的半径长度 <1.0.0>\r\n * @param {Length} $radius 定义圆的圆角半径长度 <1.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 链接处理方法\r\n * @method link\r\n * @version 1.0.0\r\n * @param {Color} $color 定义链接颜色 <1.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 文本碰到边界是否换行\r\n * @method wrap\r\n * @version 1.0.0\r\n * @param {Boolean} $is-wrap 定义文本是否换行，默认值：true <2.0.0>\r\n */\n/**\r\n * @module 文本\r\n * @description 单行文本溢出时显示省略号\r\n * @method ellipsis\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n * @param {Integer} $line-clamp 定义需要显示的行数，默认值：1（即使用单行溢出的处理方案），需要注意的是本参数只支持webkit内核 <2.1.2>\r\n */\n/**\r\n * @module 文本\r\n * @description 文字隐藏方案\r\n * @method texthide\r\n * @version 1.0.0\r\n * @param {Length} $width 定义容器的宽度，默认值：null <2.0.0>\r\n */\n/**\r\n * @module 背景颜色\r\n * @description 填充背景颜色方案\r\n * @method background-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义背景的颜色，默认值：#eee <2.0.0>\r\n */\n/**\r\n * @module 文本颜色\r\n * @description 文本颜色方案\r\n * @method text-color\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本的颜色，默认值：#333 <2.0.0>\r\n */\n/**\r\n * @module 文本行高\r\n * @description 文本行高方案\r\n * @method line-height\r\n * @version 1.0.0\r\n * @param {Length} $color 定义文本行高，默认值：1 <2.0.0>\r\n */\n/**\r\n * @module 字体大小\r\n * @description 字体大小方案\r\n * @method font-size\r\n * @version 1.0.0\r\n * @param {Length} $size 字体大小，默认值：0.12rem <2.0.0>\r\n */\n/**\r\n * @module 文本对齐方式\r\n * @description 文本对齐方式\r\n * @method fontsize\r\n * @version 1.0.0\r\n * @param {Length} $val 文本对齐方式，默认值：居中\r\n */\n/**\r\n * @module 内边距\r\n * @description 内边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\n/**\r\n * @module 字体样式\r\n * @description 字体样式\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val bold\r\n */\n/**\r\n * @module 外边距\r\n * @description 外边距\r\n * @method padding\r\n * @version 1.0.0\r\n * @param {auto} $val 5px\r\n */\n/**\r\n * 全局Reset\r\n * 重置Mobile及高级浏览器上常见的差异\r\n */\n*,\n::before,\n::after {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\n\nhtml,\nbody {\n  overflow: hidden;\n  height: 100%; }\n\n::-webkit-scrollbar {\n  display: none; }\n\nhtml {\n  background-color: #ffffff;\n  color: #333;\n  font-size: 100px;\n  -webkit-user-select: none;\n  user-select: none; }\n\nbody {\n  margin: 0;\n  font-size: 0.14em;\n  line-height: 1.5;\n  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }\n\nul,\nol,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nfigure,\nform,\nfieldset,\nlegend,\ninput,\ntextarea,\nbutton,\np,\nblockquote,\nth,\ntd,\npre,\nxmp {\n  margin: 0;\n  padding: 0; }\n\ninput,\ntextarea,\nbutton,\nselect,\npre,\nxmp,\ntt,\ncode,\nkbd,\nsamp {\n  line-height: inherit;\n  font-family: inherit; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nsmall,\nbig,\ninput,\ntextarea,\nbutton,\nselect {\n  font-size: inherit; }\n\naddress,\ncite,\ndfn,\nem,\ni,\noptgroup,\nvar {\n  font-style: normal; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed;\n  text-align: left; }\n\nul,\nol,\nmenu {\n  list-style: none; }\n\nfieldset,\nimg {\n  border: 0;\n  vertical-align: middle; }\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block; }\n\naudio,\ncanvas,\nvideo {\n  display: inline-block; }\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: \"\\0020\"; }\n\ntextarea,\npre,\nxmp {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch; }\n\ntextarea {\n  resize: vertical; }\n\ninput,\ntextarea,\nbutton,\nselect\na {\n  outline: 0 none; }\n\ninput,\ntextarea,\nbutton,\nselect {\n  color: inherit; }\n  input:disabled,\n  textarea:disabled,\n  button:disabled,\n  select:disabled {\n    opacity: 1; }\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0; }\n\ninput[type=\"button\"],\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"file\"]::-webkit-file-upload-button,\ninput[type=\"search\"]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n  appearance: none; }\n\nmark {\n  background-color: rgba(0, 0, 0, 0); }\n\na,\nins,\ns,\nu,\ndel {\n  text-decoration: none; }\n\na,\nimg {\n  -webkit-touch-callout: none; }\n\na {\n  color: #00afc7; }\n\n.g-clear::after,\n.g-mod::after {\n  display: block;\n  overflow: hidden;\n  clear: both;\n  height: 0;\n  content: \"\\0020\"; }\n\n@font-face {\n  font-family: yofont;\n  src: url(//ss.qunarzz.com/yo/font/1.0.3/yofont.woff) format(\"woff\"), url(//ss.qunarzz.com/yo/font/1.0.3/yofont.ttf) format(\"truetype\"); }\n\n.yo-ico {\n  font-family: yofont !important;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  vertical-align: middle; }\n\nhtml, body, #root, .container {\n  width: 100%;\n  height: 100%; }\n\n.container {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n  flex-direction: column; }\n  .container .box {\n    -webkit-box-flex: 1;\n    -webkit-flex: 1;\n    flex: 1;\n    width: .1px;\n    width: 100%;\n    height: auto;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: column;\n    flex-direction: column; }\n    .container .box .header {\n      width: 100%;\n      height: 0.44rem;\n      background-color: #f66; }\n    .container .box .content {\n      -webkit-box-flex: 1;\n      -webkit-flex: 1;\n      flex: 1;\n      width: .1px;\n      width: 100%;\n      height: auto;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch; }\n  .container .footer {\n    width: 100%;\n    height: 0.5rem;\n    background-color: #efefef; }\n    .container .footer ul {\n      width: 100%;\n      height: 100%;\n      display: -webkit-box;\n      display: -webkit-flex;\n      display: flex; }\n      .container .footer ul a {\n        color: #000;\n        -webkit-box-flex: 1;\n        -webkit-flex: 1;\n        flex: 1;\n        width: .1px;\n        width: auto;\n        height: 100%;\n        display: -webkit-box;\n        display: -webkit-flex;\n        display: flex;\n        -webkit-box-orient: vertical;\n        -webkit-box-direction: normal;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n        -webkit-box-pack: center;\n        -webkit-justify-content: center;\n        justify-content: center;\n        -webkit-box-align: center;\n        -webkit-align-items: center;\n        align-items: center; }\n        .container .footer ul a span {\n          font-size: 24px; }\n        .container .footer ul a p {\n          font-size: 12px; }\n        .container .footer ul a.active {\n          color: #f66; }\n"]}